{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retrieveStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validity",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50613e29806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063728fa494116100f9578063dac6270d11610097578063e7f43c6811610071578063e7f43c6814610897578063ee57e36f146108e1578063eedad66b1461099c578063fc0e3d90146109ca576101a9565b8063dac6270d1461082b578063de2229fe14610849578063e3323aba14610875576101a9565b806388cc58e4116100d357806388cc58e4146106bc57806390bfe0bf14610706578063a9fb763c146107df578063be1c766b1461080d576101a9565b8063728fa494146105bb57806372b45a5514610605578063754b27071461064f576101a9565b80632ab6f8db11610166578063465b414e11610140578063465b414e146104cd5780635baeb806146105265780635e5365c11461057f5780635f8d96de1461059d576101a9565b80632ab6f8db1461043d57806341ce28781461044757806345f544851461049f576101a9565b80630778217a146101ae5780630ee2cb10146102f85780631723537d1461034257806319fbb48e1461036e57806321df0da71461039a57806329605e77146103f9575b600080fd5b6102f660048036036101008110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561027057600080fd5b82018360208201111561028257600080fd5b803590602001918460018302840111640100000000831117156102a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506109e8565b005b610300610cfb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034a610ddc565b6040518082600281111561035a57fe5b60ff16815260200191505060405180910390f35b610376610e12565b6040518082600381111561038657fe5b60ff16815260200191505060405180910390f35b6103a2610e8b565b604051808360028111156103b257fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61043b6004803603602081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed0565b005b610445610f57565b005b6104896004803603602081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdc565b6040518082815260200191505060405180910390f35b6104cb600480360360208110156104b557600080fd5b8101908080359060200190929190505050611128565b005b610510600480360360608110156104e357600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506111f6565b6040518082815260200191505060405180910390f35b6105696004803603606081101561053c57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506112e1565b6040518082815260200191505060405180910390f35b610587611414565b6040518082815260200191505060405180910390f35b6105a5611528565b6040518082815260200191505060405180910390f35b6105c3611531565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61060d61155e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106916004803603602081101561066557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158b565b604051808381526020018260028111156106a757fe5b60ff1681526020019250505060405180910390f35b6106c461162a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107c96004803603604081101561071c57600080fd5b81019080803590602001909291908035906020019064010000000081111561074357600080fd5b82018360208201111561075557600080fd5b8035906020019184600183028401116401000000008311171561077757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611654565b6040518082815260200191505060405180910390f35b61080b600480360360208110156107f557600080fd5b8101908080359060200190929190505050611795565b005b6108156118de565b6040518082815260200191505060405180910390f35b6108336118e8565b6040518082815260200191505060405180910390f35b610851611918565b6040518082600281111561086157fe5b60ff16815260200191505060405180910390f35b61087d611948565b604051808215151515815260200191505060405180910390f35b61089f61195f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61099a600480360360208110156108f757600080fd5b810190808035906020019064010000000081111561091457600080fd5b82018360208201111561092657600080fd5b8035906020019184600183028401116401000000008311171561094857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611989565b005b6109c8600480360360208110156109b257600080fd5b8101908080359060200190929190505050611a10565b005b6109d2611b59565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613d7e602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610b5457610b5389611bbc565b5b610b6088878787611dca565b610b6983612089565b6000825114610b7c57610b7b826120ca565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610c4b57fe5b60ff168152602001858152602001846002811115610c6557fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610caf578082015181840152602081019050610c94565b50505050905090810190601f168015610cdc5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d6020811015610dc657600080fd5b8101908080519060200190929190505050905090565b6000610de6612169565b15610df45760029050610e0f565b610dfc612190565b15610e0a5760019050610e0f565b600090505b90565b6000806001541415610e275760009050610e88565b60006002811115610e3457fe5b610e3c611918565b6002811115610e4757fe5b1415610e565760019050610e88565b600280811115610e6257fe5b610e6a611918565b6002811115610e7557fe5b14610e835760029050610e88565b600390505b90565b600080610ebc600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b8565b915081610ec883612211565b915091509091565b610ed9336122ef565b610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610f5481612349565b50565b610f60336122ef565b610fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610fda612558565b565b6000610fe7336126c5565b80610ff75750610ff6336122ef565b5b611069576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611071612704565b6110e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611120611119826121b8565b828561272b565b915050919050565b61113133612752565b806111415750611140336122ef565b5b6111b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111f16111e9826121b8565b828385612791565b505050565b600060028081111561120457fe5b82600281111561121057fe5b1415611241576012600a0a61123261122c856012600a0a6127b6565b8661283c565b8161123957fe5b0490506112da565b6001600281111561124e57fe5b82600281111561125a57fe5b141561126957600090506112da565b6000600281111561127657fe5b82600281111561128257fe5b14156112d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613da86021913960400191505060405180910390fd5b5b9392505050565b60006002808111156112ef57fe5b8260028111156112fb57fe5b141561132c576012600a0a61131d611317856012600a0a6127b6565b86612874565b8161132457fe5b04905061140d565b6001600281111561133957fe5b82600281111561134557fe5b141561139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613d3c6021913960400191505060405180910390fd5b600060028111156113a957fe5b8260028111156113b557fe5b141561140c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613da86021913960400191505060405180910390fd5b5b9392505050565b600061141f336126c5565b8061142f575061142e336122ef565b5b6114a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6114a96128a8565b61151b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6115236128cf565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061165f33612752565b8061166f575061166e336122ef565b5b6116e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6116e9612704565b1561175c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61178d33600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856128f7565b905092915050565b61179e33612752565b806117ae57506117ad336122ef565b5b611820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b611828612704565b1561189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118d96118d1826121b8565b823385612bba565b505050565b6000600154905090565b60004260005411156119105761190942600054612be090919063ffffffff16565b9050611915565b600090505b90565b600080600054141561192d5760009050611945565b4260005411156119405760019050611945565b600290505b90565b600080611953611b59565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611992336122ef565b611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611a0d816120ca565b50565b611a19336126c5565b80611a295750611a28336122ef565b5b611a9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611aa3612704565b15611b16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611b54611b4c826121b8565b823385612bba565b505050565b6000611bb7611b8c600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b8565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612c69565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611dd757fe5b816002811115611de357fe5b1480611e05575060016002811115611df757fe5b816002811115611e0357fe5b145b15611e645760008214611e63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613dc9602c913960400191505060405180910390fd5b5b611e6d83612ccf565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff02191690836002811115611f3d57fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115611fe757fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561205357fe5b60ff16815260200183815260200182600281111561206d57fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561212c578082015181840152602081019050612111565b50505050905090810190601f1680156121595780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561217757fe5b61217f610e12565b600381111561218a57fe5b14905090565b60006002600381111561219f57fe5b6121a7610e12565b60038111156121b257fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b600061221c82612ccf565b61228e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561229a57fe5b8260028111156122a657fe5b14156122bb576122b4612d12565b90506122ea565b600160028111156122c857fe5b8260028111156122d457fe5b14156122e9576122e2612d2e565b90506122ea565b5b919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561240e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561261d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126cf61155e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561271257fe5b61271a610ddc565b600281111561272557fe5b14905090565b6000806127388585612c69565b905061274685858584612791565b50809150509392505050565b600061275c611531565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061279e858584612d4a565b90506127ab858484612f2a565b809050949350505050565b6000808314156127c95760009050612836565b60008284029050828482816127da57fe5b0414612831576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613d5d6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61286461285085856127b6565b60026012600a0a8161285e57fe5b0461306b565b8161286b57fe5b04905092915050565b600081612898612888856012600a0a6127b6565b6002858161289257fe5b0461306b565b8161289f57fe5b04905092915050565b60008060028111156128b657fe5b6128be610ddc565b60028111156128c957fe5b14905090565b60006128e64260015461306b90919063ffffffff16565b90506128f1816130f3565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050600060028111156129f457fe5b826002811115612a0057fe5b1415612a74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612a7f8387846111f6565b9350612a8c818986613134565b612a97818888613203565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b6e578082015181840152602081019050612b53565b50505050905090810190601f168015612b9b5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612bc78585846132a9565b9050612bd58584308561340e565b809050949350505050565b600082821115612c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600060026000846002811115612c7b57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612cde57fe5b826002811115612cea57fe5b1480612d0b5750600280811115612cfd57fe5b826002811115612d0957fe5b145b9050919050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b60008060026000866002811115612d5d57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612e21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612e348382612be090919063ffffffff16565b91508160026000876002811115612e4757fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ecb57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b612f3383612211565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fb957600080fd5b505af1158015612fcd573d6000803e3d6000fd5b505050506040513d6020811015612fe357600080fd5b8101908080519060200190929190505050613066576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050565b6000808284019050838110156130e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b60028081111561314057fe5b83600281111561314c57fe5b14156131615761315c8282613584565b6131fe565b6001600281111561316e57fe5b83600281111561317a57fe5b141561318f5761318a828261369c565b6131fd565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b505050565b600080613211858585612d4a565b905061321d85846137e8565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b8585856040518084600281111561325157fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600061331982600260008760028111156132bf57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461306b90919063ffffffff16565b9050806002600086600281111561332c57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c84848484604051808560028111156133b057fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b61341784612211565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156134d157600080fd5b505af11580156134e5573d6000803e3d6000fd5b505050506040513d60208110156134fb57600080fd5b810190808051906020019092919050505061357e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561365357600080fd5b505af1158015613667573d6000803e3d6000fd5b505050506040513d602081101561367d57600080fd5b810190808051906020019092919050505050613698816138b4565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561373757600080fd5b505af115801561374b573d6000803e3d6000fd5b505050506040513d602081101561376157600080fd5b81019080805190602001909291905050506137e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b6002808111156137f457fe5b82600281111561380057fe5b14156138145761380f816138b4565b6138b0565b6001600281111561382157fe5b82600281111561382d57fe5b14156138415761383c81613ac3565b6138af565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561396357600080fd5b505af1158015613977573d6000803e3d6000fd5b505050506040513d602081101561398d57600080fd5b81019080805190602001909291905050505060008190506000806139b083613bda565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7868686866139f7612d2e565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613a7557600080fd5b505af1158015613a89573d6000803e3d6000fd5b505050506040513d6020811015613a9f57600080fd5b81019080805190602001909291905050509050613abb81613ac3565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613b2a57600080fd5b505af1158015613b3e573d6000803e3d6000fd5b505050506040513d6020811015613b5457600080fd5b8101908080519060200190929190505050613bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613c4257600080fd5b505afa158015613c56573d6000803e3d6000fd5b505050506040513d6020811015613c6c57600080fd5b81019080805190602001909291905050509050613c87613d1f565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613cd757600080fd5b505afa158015613ceb573d6000803e3d6000fd5b505050506040513d6020811015613d0157600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820182907222f755834c22eb4d71d4ad28c4ad0d6b9e809538e8afab72472b7084b64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c8063728fa494116100f9578063dac6270d11610097578063e7f43c6811610071578063e7f43c6814610897578063ee57e36f146108e1578063eedad66b1461099c578063fc0e3d90146109ca576101a9565b8063dac6270d1461082b578063de2229fe14610849578063e3323aba14610875576101a9565b806388cc58e4116100d357806388cc58e4146106bc57806390bfe0bf14610706578063a9fb763c146107df578063be1c766b1461080d576101a9565b8063728fa494146105bb57806372b45a5514610605578063754b27071461064f576101a9565b80632ab6f8db11610166578063465b414e11610140578063465b414e146104cd5780635baeb806146105265780635e5365c11461057f5780635f8d96de1461059d576101a9565b80632ab6f8db1461043d57806341ce28781461044757806345f544851461049f576101a9565b80630778217a146101ae5780630ee2cb10146102f85780631723537d1461034257806319fbb48e1461036e57806321df0da71461039a57806329605e77146103f9575b600080fd5b6102f660048036036101008110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561027057600080fd5b82018360208201111561028257600080fd5b803590602001918460018302840111640100000000831117156102a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506109e8565b005b610300610cfb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034a610ddc565b6040518082600281111561035a57fe5b60ff16815260200191505060405180910390f35b610376610e12565b6040518082600381111561038657fe5b60ff16815260200191505060405180910390f35b6103a2610e8b565b604051808360028111156103b257fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61043b6004803603602081101561040f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed0565b005b610445610f57565b005b6104896004803603602081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdc565b6040518082815260200191505060405180910390f35b6104cb600480360360208110156104b557600080fd5b8101908080359060200190929190505050611128565b005b610510600480360360608110156104e357600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506111f6565b6040518082815260200191505060405180910390f35b6105696004803603606081101561053c57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506112e1565b6040518082815260200191505060405180910390f35b610587611414565b6040518082815260200191505060405180910390f35b6105a5611528565b6040518082815260200191505060405180910390f35b6105c3611531565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61060d61155e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106916004803603602081101561066557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158b565b604051808381526020018260028111156106a757fe5b60ff1681526020019250505060405180910390f35b6106c461162a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107c96004803603604081101561071c57600080fd5b81019080803590602001909291908035906020019064010000000081111561074357600080fd5b82018360208201111561075557600080fd5b8035906020019184600183028401116401000000008311171561077757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611654565b6040518082815260200191505060405180910390f35b61080b600480360360208110156107f557600080fd5b8101908080359060200190929190505050611795565b005b6108156118de565b6040518082815260200191505060405180910390f35b6108336118e8565b6040518082815260200191505060405180910390f35b610851611918565b6040518082600281111561086157fe5b60ff16815260200191505060405180910390f35b61087d611948565b604051808215151515815260200191505060405180910390f35b61089f61195f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61099a600480360360208110156108f757600080fd5b810190808035906020019064010000000081111561091457600080fd5b82018360208201111561092657600080fd5b8035906020019184600183028401116401000000008311171561094857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611989565b005b6109c8600480360360208110156109b257600080fd5b8101908080359060200190929190505050611a10565b005b6109d2611b59565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613d7e602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610b5457610b5389611bbc565b5b610b6088878787611dca565b610b6983612089565b6000825114610b7c57610b7b826120ca565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610c4b57fe5b60ff168152602001858152602001846002811115610c6557fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610caf578082015181840152602081019050610c94565b50505050905090810190601f168015610cdc5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d6020811015610dc657600080fd5b8101908080519060200190929190505050905090565b6000610de6612169565b15610df45760029050610e0f565b610dfc612190565b15610e0a5760019050610e0f565b600090505b90565b6000806001541415610e275760009050610e88565b60006002811115610e3457fe5b610e3c611918565b6002811115610e4757fe5b1415610e565760019050610e88565b600280811115610e6257fe5b610e6a611918565b6002811115610e7557fe5b14610e835760029050610e88565b600390505b90565b600080610ebc600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b8565b915081610ec883612211565b915091509091565b610ed9336122ef565b610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610f5481612349565b50565b610f60336122ef565b610fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610fda612558565b565b6000610fe7336126c5565b80610ff75750610ff6336122ef565b5b611069576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611071612704565b6110e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611120611119826121b8565b828561272b565b915050919050565b61113133612752565b806111415750611140336122ef565b5b6111b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111f16111e9826121b8565b828385612791565b505050565b600060028081111561120457fe5b82600281111561121057fe5b1415611241576012600a0a61123261122c856012600a0a6127b6565b8661283c565b8161123957fe5b0490506112da565b6001600281111561124e57fe5b82600281111561125a57fe5b141561126957600090506112da565b6000600281111561127657fe5b82600281111561128257fe5b14156112d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613da86021913960400191505060405180910390fd5b5b9392505050565b60006002808111156112ef57fe5b8260028111156112fb57fe5b141561132c576012600a0a61131d611317856012600a0a6127b6565b86612874565b8161132457fe5b04905061140d565b6001600281111561133957fe5b82600281111561134557fe5b141561139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613d3c6021913960400191505060405180910390fd5b600060028111156113a957fe5b8260028111156113b557fe5b141561140c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613da86021913960400191505060405180910390fd5b5b9392505050565b600061141f336126c5565b8061142f575061142e336122ef565b5b6114a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6114a96128a8565b61151b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6115236128cf565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061165f33612752565b8061166f575061166e336122ef565b5b6116e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6116e9612704565b1561175c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61178d33600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856128f7565b905092915050565b61179e33612752565b806117ae57506117ad336122ef565b5b611820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b611828612704565b1561189b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118d96118d1826121b8565b823385612bba565b505050565b6000600154905090565b60004260005411156119105761190942600054612be090919063ffffffff16565b9050611915565b600090505b90565b600080600054141561192d5760009050611945565b4260005411156119405760019050611945565b600290505b90565b600080611953611b59565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611992336122ef565b611a04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611a0d816120ca565b50565b611a19336126c5565b80611a295750611a28336122ef565b5b611a9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611aa3612704565b15611b16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611b54611b4c826121b8565b823385612bba565b505050565b6000611bb7611b8c600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121b8565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612c69565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611dd757fe5b816002811115611de357fe5b1480611e05575060016002811115611df757fe5b816002811115611e0357fe5b145b15611e645760008214611e63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613dc9602c913960400191505060405180910390fd5b5b611e6d83612ccf565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff02191690836002811115611f3d57fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115611fe757fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561205357fe5b60ff16815260200183815260200182600281111561206d57fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561212c578082015181840152602081019050612111565b50505050905090810190601f1680156121595780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561217757fe5b61217f610e12565b600381111561218a57fe5b14905090565b60006002600381111561219f57fe5b6121a7610e12565b60038111156121b257fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b600061221c82612ccf565b61228e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561229a57fe5b8260028111156122a657fe5b14156122bb576122b4612d12565b90506122ea565b600160028111156122c857fe5b8260028111156122d457fe5b14156122e9576122e2612d2e565b90506122ea565b5b919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561240e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561261d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126cf61155e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561271257fe5b61271a610ddc565b600281111561272557fe5b14905090565b6000806127388585612c69565b905061274685858584612791565b50809150509392505050565b600061275c611531565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061279e858584612d4a565b90506127ab858484612f2a565b809050949350505050565b6000808314156127c95760009050612836565b60008284029050828482816127da57fe5b0414612831576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613d5d6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61286461285085856127b6565b60026012600a0a8161285e57fe5b0461306b565b8161286b57fe5b04905092915050565b600081612898612888856012600a0a6127b6565b6002858161289257fe5b0461306b565b8161289f57fe5b04905092915050565b60008060028111156128b657fe5b6128be610ddc565b60028111156128c957fe5b14905090565b60006128e64260015461306b90919063ffffffff16565b90506128f1816130f3565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050600060028111156129f457fe5b826002811115612a0057fe5b1415612a74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612a7f8387846111f6565b9350612a8c818986613134565b612a97818888613203565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b6e578082015181840152602081019050612b53565b50505050905090810190601f168015612b9b5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612bc78585846132a9565b9050612bd58584308561340e565b809050949350505050565b600082821115612c58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600060026000846002811115612c7b57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612cde57fe5b826002811115612cea57fe5b1480612d0b5750600280811115612cfd57fe5b826002811115612d0957fe5b145b9050919050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b60008060026000866002811115612d5d57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612e21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612e348382612be090919063ffffffff16565b91508160026000876002811115612e4757fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ecb57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b612f3383612211565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fb957600080fd5b505af1158015612fcd573d6000803e3d6000fd5b505050506040513d6020811015612fe357600080fd5b8101908080519060200190929190505050613066576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050565b6000808284019050838110156130e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b60028081111561314057fe5b83600281111561314c57fe5b14156131615761315c8282613584565b6131fe565b6001600281111561316e57fe5b83600281111561317a57fe5b141561318f5761318a828261369c565b6131fd565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b505050565b600080613211858585612d4a565b905061321d85846137e8565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b8585856040518084600281111561325157fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600061331982600260008760028111156132bf57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461306b90919063ffffffff16565b9050806002600086600281111561332c57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c84848484604051808560028111156133b057fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b61341784612211565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156134d157600080fd5b505af11580156134e5573d6000803e3d6000fd5b505050506040513d60208110156134fb57600080fd5b810190808051906020019092919050505061357e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561365357600080fd5b505af1158015613667573d6000803e3d6000fd5b505050506040513d602081101561367d57600080fd5b810190808051906020019092919050505050613698816138b4565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561373757600080fd5b505af115801561374b573d6000803e3d6000fd5b505050506040513d602081101561376157600080fd5b81019080805190602001909291905050506137e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b6002808111156137f457fe5b82600281111561380057fe5b14156138145761380f816138b4565b6138b0565b6001600281111561382157fe5b82600281111561382d57fe5b14156138415761383c81613ac3565b6138af565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561396357600080fd5b505af1158015613977573d6000803e3d6000fd5b505050506040513d602081101561398d57600080fd5b81019080805190602001909291905050505060008190506000806139b083613bda565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7868686866139f7612d2e565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613a7557600080fd5b505af1158015613a89573d6000803e3d6000fd5b505050506040513d6020811015613a9f57600080fd5b81019080805190602001909291905050509050613abb81613ac3565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613b2a57600080fd5b505af1158015613b3e573d6000803e3d6000fd5b505050506040513d6020811015613b5457600080fd5b8101908080519060200190929190505050613bd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613c4257600080fd5b505afa158015613c56573d6000803e3d6000fd5b505050506040513d6020811015613c6c57600080fd5b81019080805190602001909291905050509050613c87613d1f565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613cd757600080fd5b505afa158015613ceb573d6000803e3d6000fd5b505050506040513d6020811015613d0157600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820182907222f755834c22eb4d71d4ad28c4ad0d6b9e809538e8afab72472b7084b64736f6c634300050d0032",
  "sourceMap": "1595:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1595:12972:0;;;;;;;",
  "deployedSourceMap": "1595:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1595:12972:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3574:970;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3574:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3574:970:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3574:970:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3574:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3574:970:0;;;;;;;;;;;;;;;:::i;:::-;;1135:229:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13363:335:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:428:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12184:210:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10354:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10354:228:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;10721:204;;;:::i;:::-;;9651:496;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9651:496:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8236:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8236:414:0;;;;;;;;;;;;;;;;;:::i;:::-;;5355:393:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5355:393:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6384:428;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6384:428:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8941:361:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1036:95:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11570:112:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11054:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4244:212:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4244:212:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:92:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7523:439:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7523:439:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7523:439:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7523:439:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7523:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7523:439:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6221:476;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6221:476:0;;;;;;;;;;;;;;;;;:::i;:::-;;1442:89:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1481:173:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1998:275;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12794:139:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1455:95:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4748:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4748:226:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4748:226:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4748:226:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4748:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4748:226:0;;;;;;;;;;;;;;;:::i;:::-;;5356:471;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5356:471:0;;;;;;;;;;;;;;;;;:::i;:::-;;12524:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3574:970;601:10:26;590:8;;:21;;;;;;;;;;;;;;;;;;703:15;763:7;751:20;739:32;;802:1;790:8;:13;;;782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:6:0;3910:5;:12;;;:21;;;;;;;;;;;;;;;;;;3962:12;3941:5;:18;;;:33;;;;;;;;;;;;;;;;;;4033:1;4013:22;;:8;:22;;;4009:84;;4051:31;4073:8;4051:21;:31::i;:::-;4009:84;4133:53;4152:6;4160:7;4169:5;4176:9;4133:18;:53::i;:::-;4229:37;4250:15;4229:20;:37::i;:::-;4324:1;4305:8;:15;:20;4301:87;;4341:36;4368:8;4341:26;:36::i;:::-;4301:87;4440:97;4452:8;4462:6;4470:12;4484:7;4493:5;4500:9;4511:15;4528:8;4440:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4440:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3574:970;;;;;;;;;:::o;1135:229:26:-;1178:15;1314:8;;;;;;;;;;;1305:37;;;1351:4;1305:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:52:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:52:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1305:52:26;;;;;;;;;;;;;;;;1298:59;;1135:229;:::o;13363:335:0:-;13414:22;13452:18;:16;:18::i;:::-;13448:244;;;13493:28;13486:35;;;;13448:244;13542:20;:18;:20::i;:::-;13538:154;;;13585:29;13578:36;;;;13538:154;13652:29;13645:36;;13363:335;;:::o;1973:428:15:-;2024:22;2073:1;2062:7;;:12;2058:59;;;2095:22;2088:29;;;;2058:59;2163:21;2131:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2127:99;;;2205:21;2198:28;;;;2127:99;2272:21;2240:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2236:158;;2314:24;2307:31;;;;2236:158;2372:22;2365:29;;1973:428;;:::o;12184:210:0:-;12225:27;12254:13;12289:33;12309:5;:12;;;;;;;;;;;;12289:19;:33::i;:::-;12279:43;;12340:7;12349:37;12378:7;12349:28;:37::i;:::-;12332:55;;;;12184:210;;:::o;10354:228::-;10450:31;10470:10;10450:19;:31::i;:::-;10442:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10539:36;10566:8;10539:26;:36::i;:::-;10354:228;:::o;10721:204::-;10801:31;10821:10;10801:19;:31::i;:::-;10793:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10890:28;:26;:28::i;:::-;10721:204::o;9651:496::-;9709:14;9770:20;9779:10;9770:8;:20::i;:::-;:55;;;;9794:31;9814:10;9794:19;:31::i;:::-;9770:55;9762:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9910:14;:12;:14::i;:::-;9902:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9997:14;10014:5;:12;;;;;;;;;;;;9997:29;;10070:70;10093:27;10113:6;10093:19;:27::i;:::-;10122:6;10130:9;10070:22;:70::i;:::-;10063:77;;;9651:496;;;:::o;8236:414::-;8335:26;8350:10;8335:14;:26::i;:::-;:61;;;;8365:31;8385:10;8365:19;:31::i;:::-;8335:61;8327:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8479:14;8496:5;:12;;;;;;;;;;;;8479:29;;8563:80;8582:27;8602:6;8582:19;:27::i;:::-;8611:6;8619;8627:15;8563:18;:80::i;:::-;;8236:414;;:::o;5355:393:20:-;5448:12;5489:13;5476:26;;;;;;;;:9;:26;;;;;;;;;5472:110;;;948:2;933;925:26;5523:53;5539:29;5552:10;948:2;933;925:26;5539:12;:29::i;:::-;5570:5;5523:15;:53::i;:::-;:59;;;;;;5516:66;;;;5472:110;5609:13;5596:26;;;;;;;;:9;:26;;;;;;;;;5592:52;;;5643:1;5636:8;;;;5592:52;5671:13;5658:26;;;;;;;;:9;:26;;;;;;;;;5654:87;;;5698:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5654:87;5355:393;;;;;;:::o;6384:428::-;6477:18;6524:13;6511:26;;;;;;;;:9;:26;;;;;;;;;6507:104;;;948:2;933;925:26;6558:47;6574:23;6587:4;948:2;933;925:26;6574:12;:23::i;:::-;6599:5;6558:15;:47::i;:::-;:53;;;;;;6551:60;;;;6507:104;6638:13;6625:26;;;;;;;;:9;:26;;;;;;;;;6621:87;;;6665:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6621:87;6735:13;6722:26;;;;;;;;:9;:26;;;;;;;;;6718:87;;;6762:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6718:87;6384:428;;;;;;:::o;8941:361:0:-;8983:16;9046:20;9055:10;9046:8;:20::i;:::-;:55;;;;9070:31;9090:10;9070:19;:31::i;:::-;9046:55;9038:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9192:15;:13;:15::i;:::-;9184:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9277:18;:16;:18::i;:::-;9270:25;;8941:361;:::o;1036:95:16:-;1080:16;1115:9;;1108:16;;1036:95;:::o;11570:112:0:-;11618:20;11657:5;:18;;;;;;;;;;;;11650:25;;11570:112;:::o;11054:94::-;11096:14;11129:5;:12;;;;;;;;;;;;11122:19;;11054:94;:::o;4244:212:20:-;4299:13;4314:19;4392:11;:19;4404:6;4392:19;;;;;;;;;;;;;;;:25;;;4419:11;:19;4431:6;4419:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4384:65;;;;4244:212;;;:::o;1771:92:26:-;1814:15;1848:8;;;;;;;;;;;1841:15;;1771:92;:::o;7523:439:0:-;7597:12;7656:26;7671:10;7656:14;:26::i;:::-;:61;;;;7686:31;7706:10;7686:19;:31::i;:::-;7656:61;7648:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7813:14;:12;:14::i;:::-;7812:15;7804:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7893:62;7909:10;7921:5;:12;;;;;;;;;;;;7935:10;7947:7;7893:15;:62::i;:::-;7886:69;;7523:439;;;;:::o;6221:476::-;6310:26;6325:10;6310:14;:26::i;:::-;:61;;;;6340:31;6360:10;6340:19;:31::i;:::-;6310:61;6302:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6467:14;:12;:14::i;:::-;6466:15;6458:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6550:14;6567:5;:12;;;;;;;;;;;;6550:29;;6611:79;6629:27;6649:6;6629:19;:27::i;:::-;6658:6;6666:10;6678:11;6611:17;:79::i;:::-;;6221:476;;:::o;1442:89:15:-;1484:14;1517:7;;1510:14;;1442:89;:::o;1481:173:16:-;1530:12;1570:3;1558:9;;:15;1554:93;;;1594:18;1608:3;1594:9;;:13;;:18;;;;:::i;:::-;1587:25;;;;1554:93;1646:1;1639:8;;1481:173;;:::o;1998:275::-;2048:21;2098:1;2085:9;;:14;2081:60;;;2120:21;2113:28;;;;2081:60;2167:3;2155:9;;:15;2151:115;;;2191:20;2184:27;;;;2151:115;2245:21;2238:28;;1998:275;;:::o;12794:139:0:-;12835:13;12860:20;12883:10;:8;:10::i;:::-;12860:33;;12925:1;12910:12;:16;12903:23;;;12794:139;:::o;1455:95:21:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;4748:226:0:-;4844:31;4864:10;4844:19;:31::i;:::-;4836:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4931:36;4958:8;4931:26;:36::i;:::-;4748:226;:::o;5356:471::-;5452:20;5461:10;5452:8;:20::i;:::-;:55;;;;5476:31;5496:10;5476:19;:31::i;:::-;5452:55;5444:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5597:14;:12;:14::i;:::-;5596:15;5588:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5680:14;5697:5;:12;;;;;;;;;;;;5680:29;;5741:79;5759:27;5779:6;5759:19;:27::i;:::-;5788:6;5796:10;5808:11;5741:17;:79::i;:::-;;5356:471;;:::o;12524:147::-;12565:13;12597:67;12616:33;12636:5;:12;;;;;;;;;;;;12616:19;:33::i;:::-;12651:5;:12;;;;;;;;;;;;12597:18;:67::i;:::-;12590:74;;12524:147;:::o;302:417:21:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;1618:640:20:-;1754:13;1741:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1784:13;1771:26;;;;;;;;:9;:26;;;;;;;;;1741:56;1737:154;;;1830:1;1821:5;:10;1813:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:154;1941:36;1969:7;1941:27;:36::i;:::-;1933:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:7;2007:11;:19;2019:6;2007:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2114:5;2086:11;:19;2098:6;2086:19;;;;;;;;;;;;;;;:25;;:33;;;;2161:9;2129:11;:19;2141:6;2129:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2208:43;2217:6;2225:7;2234:5;2241:9;2208:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:640;;;;:::o;823:110:15:-;888:6;878:7;:16;;;;909:17;919:6;909:17;;;;;;;;;;;;;;;;;;823:110;:::o;418:97:18:-;487:21;499:8;487:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;487:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:97;:::o;3354:126:15:-;3395:13;3451:22;3427:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;3420:53;;3354:126;:::o;3081:130::-;3124:13;3180:24;3156:48;;;;;;;;:20;:18;:20::i;:::-;:48;;;;;;;;;3149:55;;3081:130;:::o;4622:180:20:-;4681:27;4767:11;:19;4779:6;4767:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4759:36;;4622:180;;;:::o;550:314:27:-;614:20;654:23;669:7;654:14;:23::i;:::-;646:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:10;709:21;;;;;;;;:7;:21;;;;;;;;;705:71;;;751:25;:23;:25::i;:::-;744:32;;;;705:71;801:10;790:21;;;;;;;;:7;:21;;;;;;;;;786:71;;;832:25;:23;:25::i;:::-;825:32;;;;786:71;550:314;;;;:::o;1556:111:21:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;725:410::-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;11325:117:0:-;11382:13;11424:11;:9;:11::i;:::-;11414:21;;:6;:21;;;11407:28;;11325:117;;;:::o;14427:138::-;14474:13;14530:28;14506:52;;;;;;;;:20;:18;:20::i;:::-;:52;;;;;;;;;14499:59;;14427:138;:::o;3053:369:25:-;3159:19;3213:22;3238:35;3257:7;3266:6;3238:18;:35::i;:::-;3213:60;;3311:54;3322:7;3331:6;3339:9;3350:14;3311:10;:54::i;:::-;;3401:14;3394:21;;;3053:369;;;;;:::o;11865:129:0:-;11928:13;11970:17;:15;:17::i;:::-;11960:27;;:6;:27;;;11953:34;;11865:129;;;:::o;2215:408:25:-;2339:16;2404:55;2429:7;2438:6;2446:12;2404:24;:55::i;:::-;2393:66;;2507:56;2530:7;2539:9;2550:12;2507:22;:56::i;:::-;2608:8;2601:15;;2215:408;;;;;;:::o;233:458:9:-;291:7;536:1;531;:6;527:45;;;560:1;553:8;;;;527:45;582:9;598:1;594;:5;582:17;;626:1;621;617;:5;;;;;;:10;609:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:1;676:8;;;233:458;;;;;:::o;520:140:6:-;577:9;313:2;298;290:26;602:43;615:18;628:1;631;615:12;:18::i;:::-;643:1;313:2;298;290:26;635:9;;;;;;602:12;:43::i;:::-;:51;;;;;;598:55;;520:140;;;;:::o;854:136::-;911:9;982:1;936:43;949:22;962:1;313:2;298;290:26;949:12;:22::i;:::-;977:1;973;:5;;;;;;936:12;:43::i;:::-;:47;;;;;;932:51;;854:136;;;;:::o;13848:140:0:-;13896:13;13952:29;13928:53;;;;;;;;:20;:18;:20::i;:::-;:53;;;;;;;;;13921:60;;13848:140;:::o;1128:164:15:-;1164:16;1203;1215:3;1203:7;;:11;;:16;;;;:::i;:::-;1192:27;;1229:31;1251:8;1229:21;:31::i;:::-;1277:8;1270:15;;1128:164;:::o;2824:969:20:-;2972:12;3035:13;3051:11;:19;3063:6;3051:19;;;;;;;;;;;;;;;:25;;;3035:41;;3086:19;3108:11;:19;3120:6;3108:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3086:51;;3147:27;3177:11;:19;3189:6;3177:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3147:57;;3236:13;3223:26;;;;;;;;:9;:26;;;;;;;;;;3215:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:37;3403:5;3410:10;3422:9;3395:7;:37::i;:::-;3388:44;;3496:47;3519:7;3528:8;3538:4;3496:22;:47::i;:::-;3609;3628:7;3637:6;3645:10;3609:18;:47::i;:::-;;3694:52;3702:8;3712:6;3720:10;3732:4;3738:7;3694:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3694:52:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:4;3775:11;;;;;2824:969;;;;;;:::o;1272:417:25:-;1391:16;1456:54;1481:7;1490:6;1498:11;1456:24;:54::i;:::-;1445:65;;1558:71;1585:7;1594:6;1610:4;1617:11;1558:26;:71::i;:::-;1674:8;1667:15;;1272:417;;;;;;:::o;1280:179:9:-;1338:7;1370:1;1365;:6;;1357:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:9;1432:1;1428;:5;1416:17;;1451:1;1444:8;;;1280:179;;;;:::o;3718:159:17:-;3804:15;3838:8;:26;3855:7;3847:16;;;;;;;;3838:26;;;;;;;;;;;:32;3865:4;3838:32;;;;;;;;;;;;;;;;3831:39;;3718:159;;;;:::o;1058:148:27:-;1121:13;1164:10;1153:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1189:10;1178:21;;;;;;;;:7;:21;;;;;;;;;1153:46;1146:53;;1058:148;;;:::o;2889:99:13:-;2939:13;535:42;2964:17;;2889:99;:::o;1501::14:-;1551:13;565:42;1576:17;;1501:99;:::o;2081:694:17:-;2192:18;2253:22;2278:8;:26;2295:7;2287:16;;;;;;;;2278:26;;;;;;;;;;;:32;2305:4;2278:32;;;;;;;;;;;;;;;;2253:57;;2386:14;2368;:32;;2360:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:34;2518:14;2499;:18;;:34;;;;:::i;:::-;2486:47;;2615:10;2580:8;:26;2597:7;2589:16;;;;;;;;2580:26;;;;;;;;;;;:32;2607:4;2580:32;;;;;;;;;;;;;;;:45;;;;2663:59;2680:7;2689:4;2695:14;2711:10;2663:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:10;2751:17;;;2081:694;;;;;:::o;1400:174:27:-;1496:24;1512:7;1496:15;:24::i;:::-;1489:41;;;1531:2;1535:5;1489:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1489:52:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1489:52:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1489:52:27;;;;;;;;;;;;;;;;1481:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:174;;;:::o;1542:176:9:-;1600:7;1619:9;1635:1;1631;:5;1619:17;;1659:1;1654;:6;;1646:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:1;1703:8;;;1542:176;;;;:::o;770:122:16:-;841:8;829:9;:20;;;;864:21;876:8;864:21;;;;;;;;;;;;;;;;;;770:122;:::o;2632:315:27:-;2730:10;2719:21;;;;;;;;:7;:21;;;;;;;;;2715:226;;;2756:30;2774:4;2780:5;2756:17;:30::i;:::-;2715:226;;;2818:10;2807:21;;;;;;;;:7;:21;;;;;;;;;2803:138;;;2844:30;2862:4;2868:5;2844:17;:30::i;:::-;2803:138;;;2905:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:138;2715:226;2632:315;;;:::o;3841:453:25:-;3946:16;4000:18;4021:55;4046:7;4055:6;4063:12;4021:24;:55::i;:::-;4000:76;;4120:41;4139:7;4148:12;4120:18;:41::i;:::-;4199:42;4211:7;4220:6;4228:12;4199:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4277:10;4270:17;;;3841:453;;;;;:::o;1238:479:17:-;1346:18;1429:49;1466:11;1429:8;:26;1446:7;1438:16;;;;;;;;1429:26;;;;;;;;;;;:32;1456:4;1429:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1416:62;;1560:10;1525:8;:26;1542:7;1534:16;;;;;;;;1525:26;;;;;;;;;;;:32;1552:4;1525:32;;;;;;;;;;;;;;;:45;;;;1608:56;1625:7;1634:4;1640:11;1653:10;1608:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:10;1693:17;;1238:479;;;;;:::o;1815:202:27:-;1929:24;1945:7;1929:15;:24::i;:::-;1922:45;;;1968:4;1974:2;1978:5;1922:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1922:62:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1922:62:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1922:62:27;;;;;;;;;;;;;;;;1914:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:202;;;;:::o;1025:217:13:-;535:42;1134:30;;;1165:4;1179;1186:5;1134:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:58:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:58:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:58:13;;;;;;;;;;;;;;;;;1223:12;1229:5;1223;:12::i;:::-;1025:217;;:::o;1249:150:14:-;565:42;1324:31;;;1356:4;1362:5;1324:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1324:44:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1324:44:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1324:44:14;;;;;;;;;;;;;;;;1316:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:150;;:::o;2163:277:27:-;2243:10;2232:21;;;;;;;;:7;:21;;;;;;;;;2228:206;;;2269:20;2283:5;2269:13;:20::i;:::-;2228:206;;;2321:10;2310:21;;;;;;;;:7;:21;;;;;;;;;2306:128;;;2347:20;2361:5;2347:13;:20::i;:::-;2306:128;;;2398:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2306:128;2228:206;2163:277;;:::o;1455:653:13:-;535:42;1551:25;;;669:42;1591:5;1551:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:46:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1551:46:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1551:46:13;;;;;;;;;;;;;;;;;1636:19;1658:5;1636:27;;1674:25;1701:22;1727:34;1749:11;1727:21;:34::i;:::-;1673:88;;;;1771:16;1790:3;1771:22;;1803:21;669:42;1827:60;;;1901:11;1926:17;1957:14;1985:8;2007:25;:23;:25::i;:::-;1827:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1827:215:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1827:215:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1827:215:13;;;;;;;;;;;;;;;;1803:239;;2073:28;2087:13;2073;:28::i;:::-;1455:653;;;;;;:::o;891:111:14:-;565:42;948:20;;;969:5;948:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:27:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;948:27:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:27:14;;;;;;;;;;;;;;;;940:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:111;:::o;2424:363:13:-;2497:17;2516;669:42;2557:62;;;2620:9;2557:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2557:73:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2557:73:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2557:73:13;;;;;;;;;;;;;;;;2545:85;;2677:28;:26;:28::i;:::-;2652:78;;;2731:9;2652:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2652:89:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2652:89:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2652:89:13;;;;;;;;;;;;;;;;2640:101;;2759:9;2770;2751:29;;;;2424:363;;;:::o;1724:111:14:-;1777:16;699:42;1805:23;;1724:111;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../helpers/openzeppelin-solidity/math/SafeMath.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/CountdownGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time before the end of the countdown.\n///             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n///             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // execute griefing\n        return Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the staker to begin countdown to finalize the agreement\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before Countdown.isActive()\n    /// @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require countdown is not started\n        require(isInitialized(), \"deadline already set\");\n\n        // start countdown\n        return Countdown._start();\n    }\n\n    /// @notice Called by the staker to retrieve the remaining stake once the agreement has ended\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: after Countdown.isOver()\n    /// @param recipient address of the account where to send the stake\n    /// @return amount uint256 amount of tokens (18 decimals) retrieved\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // retrieve stake\n        return Staking._takeFullStake(Griefing.getTokenID(staker), staker, recipient);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    /// @notice Validate if the current stake is greater than 0\n    /// @return validity bool true if non-zero stake\n    function isStaked() public view returns (bool validity) {\n        uint256 currentStake = getStake();\n        return currentStake > 0;\n    }\n\n    enum AgreementStatus { isInitialized, isInCountdown, isTerminated }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isInCountdown: staker has triggered countdown to termination\n    ///          - isTerminated: griefing agreement is over, staker can retrieve stake\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        if (Countdown.isOver()) {\n            return AgreementStatus.isTerminated;\n        } else if (Countdown.isActive()) {\n            return AgreementStatus.isInCountdown;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n    /// @return validity bool true if correct state\n    function isInCountdown() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInCountdown;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isTerminated state\n    /// @return validity bool true if correct state\n    function isTerminated() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isTerminated;\n    }\n}\n",
  "sourcePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/CountdownGriefing.sol",
  "ast": {
    "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/CountdownGriefing.sol",
    "exportedSymbols": {
      "CountdownGriefing": [597]
    },
    "id": 598,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".13"],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/helpers/openzeppelin-solidity/math/SafeMath.sol",
        "file": "../helpers/openzeppelin-solidity/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 3112,
        "src": "26:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Countdown.sol",
        "file": "../modules/Countdown.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 4043,
        "src": "87:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 5032,
        "src": "122:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 4355,
        "src": "156:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 5150,
        "src": "195:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 6388,
        "src": "229:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Countdown",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4042,
              "src": "1625:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Countdown_$4042",
                "typeString": "contract Countdown"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1625:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5031,
              "src": "1636:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5031",
                "typeString": "contract Griefing"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "1636:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4354,
              "src": "1646:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4354",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "1646:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5149,
              "src": "1661:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5149",
                "typeString": "contract Operated"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1661:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6387,
              "src": "1671:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6387",
                "typeString": "contract Template"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:8:0"
          }
        ],
        "contractDependencies": [
          3825,
          3894,
          4042,
          4157,
          4337,
          4354,
          5031,
          5149,
          6324,
          6387,
          6701
        ],
        "contractKind": "contract",
        "documentation": "@title CountdownGriefing\n @author Stephane Gosselin (@thegostep) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/CountdownGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time before the end of the countdown.\n             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 597,
        "linearizedBaseContracts": [
          597,
          6387,
          5149,
          4354,
          5031,
          6324,
          6701,
          3825,
          3894,
          4337,
          4042,
          4157
        ],
        "name": "CountdownGriefing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20,
            "libraryName": {
              "contractScope": null,
              "id": 18,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3111,
              "src": "1693:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1687:27:0",
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1706:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 22,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 597,
            "src": "1720:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$27_storage",
              "typeString": "struct CountdownGriefing.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 21,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27,
              "src": "1720:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$27_storage_ptr",
                "typeString": "struct CountdownGriefing.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "CountdownGriefing.Data",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1766:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1766:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1790:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1790:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 597,
            "src": "1744:73:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 45,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1850:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1876:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1900:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1930:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 34,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "1930:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1967:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1990:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "1990:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "countdownLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2028:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2061:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:241:0"
            },
            "src": "1823:259:0"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "3870:674:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3910:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$27_storage",
                          "typeString": "struct CountdownGriefing.Data storage ref"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "3925:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3910:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3941:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$27_storage",
                          "typeString": "struct CountdownGriefing.Data storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3941:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3962:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3941:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:33:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4013:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4033:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4025:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4025:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4013:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 90,
                  "nodeType": "IfStatement",
                  "src": "4009:84:0",
                  "trueBody": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "4037:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "4051:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5071,
                            "src": "4051:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4051:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "4051:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4152:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4169:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4176:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "4133:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "4133:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "countdownLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4250:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "4229:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3923,
                      "src": "4229:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "4305:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4305:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4324:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4305:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 117,
                  "nodeType": "IfStatement",
                  "src": "4301:87:0",
                  "trueBody": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "4327:61:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "4368:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4354,
                              "src": "4341:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "4341:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "4341:36:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4452:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4462:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "4470:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4484:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4500:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "countdownLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4511:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "4528:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 118,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4440:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,uint256,bytes memory)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4440:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "EmitStatement",
                  "src": "4435:102:0"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6349,
                  "src": "3849:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3849:20:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3603:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3629:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3653:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3683:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 52,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "3683:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3720:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3743:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 56,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "3743:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "countdownLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3781:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3814:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3814:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3593:248:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:0:0"
            },
            "scope": 597,
            "src": "3574:970:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "4799:175:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "4864:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4864:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "4844:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "4844:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4844:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4877:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4958:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "4931:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4353,
                      "src": "4931:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4931:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "4931:36:0"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "4769:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4769:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4768:23:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4799:0:0"
            },
            "scope": 597,
            "src": "4748:226:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "5407:420:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 158,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5461:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5461:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 157,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5452:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5452:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 163,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5496:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5496:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5476:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5476:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5476:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5452:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5444:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5444:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5596:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 171,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "5597:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5597:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5613:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5588:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:43:0"
                },
                {
                  "assignments": [178],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5680:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5680:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5697:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "5697:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5680:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "5779:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5759:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5759:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5759:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "5788:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "5796:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5796:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "5808:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5741:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:79:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: before isTerminated()\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "5379:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5379:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5378:21:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5407:0:0"
            },
            "scope": 597,
            "src": "5356:471:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "6265:432:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6325:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6325:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 202,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "6310:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6310:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 208,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6360:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6360:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "6340:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "6340:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6310:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6373:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6302:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:103:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6466:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 216,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "6467:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6467:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6483:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6458:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "6458:43:0"
                },
                {
                  "assignments": [223],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "6550:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6550:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6567:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "6567:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6550:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6649:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "6629:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "6629:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6629:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "6658:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "6666:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6666:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "6678:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "6611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "6611:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6611:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "6611:79:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: before isTerminated()\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "6237:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6237:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6236:21:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6265:0:0"
            },
            "scope": 597,
            "src": "6221:476:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "7611:351:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7671:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7671:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 251,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "7656:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7656:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7706:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7706:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7686:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7686:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7686:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7656:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7719:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7648:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:103:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7812:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 265,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "7813:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7813:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7829:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7804:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "7909:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7909:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "7921:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$27_storage",
                            "typeString": "struct CountdownGriefing.Data storage ref"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "7921:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "punishment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "7935:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "7947:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "7893:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_grief",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4904,
                      "src": "7893:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7893:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 280,
                  "nodeType": "Return",
                  "src": "7886:69:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: before isTerminated()\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7539:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7539:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7559:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7559:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7538:42:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7597:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7597:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7596:14:0"
            },
            "scope": 597,
            "src": "7523:439:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "8290:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 289,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "8350:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8350:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 288,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "8335:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8335:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "8385:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8385:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "8365:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "8365:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8365:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8335:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8398:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8327:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "8327:103:0"
                },
                {
                  "assignments": [302],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "8479:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8479:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 305,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 303,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "8496:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "8496:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8479:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "8602:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 309,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "8582:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "8582:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8582:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "8611:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "8619:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "amountToRelease",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "8627:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "8563:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6232,
                      "src": "8563:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:80:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "amountToRelease",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "8258:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8257:25:0"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8290:0:0"
            },
            "scope": 597,
            "src": "8236:414:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "9001:301:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 326,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9055:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9055:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 325,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "9046:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9046:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9090:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9090:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "9070:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "9070:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9070:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9046:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9103:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 339,
                          "name": "isInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "9192:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9192:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646561646c696e6520616c726561647920736574",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9209:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e251cf37b2e12fd04de90f35751eea0b9792a1611eb1f01a4e79fb7f6797acc6",
                          "typeString": "literal_string \"deadline already set\""
                        },
                        "value": "deadline already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e251cf37b2e12fd04de90f35751eea0b9792a1611eb1f01a4e79fb7f6797acc6",
                          "typeString": "literal_string \"deadline already set\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9184:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9184:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "9184:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "9277:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3944,
                      "src": "9277:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 323,
                  "id": 347,
                  "nodeType": "Return",
                  "src": "9270:25:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to begin countdown to finalize the agreement\n @dev Access Control: staker OR operator\n      State Machine: before Countdown.isActive()\n @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startCountdown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8964:2:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "8983:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8983:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8982:18:0"
            },
            "scope": 597,
            "src": "8941:361:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "9725:422:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9779:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9779:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 357,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "9770:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9770:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 363,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9814:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9814:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 361,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "9794:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "9794:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9794:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9770:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9827:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9762:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9762:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9762:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 371,
                          "name": "isTerminated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "9910:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9910:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646561646c696e65206e6f7420706173736564",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9926:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e3c3ed466b4494ab1c7e64434ab6a1a9840cdcc664320d0be16ffd1314382b5",
                          "typeString": "literal_string \"deadline not passed\""
                        },
                        "value": "deadline not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e3c3ed466b4494ab1c7e64434ab6a1a9840cdcc664320d0be16ffd1314382b5",
                          "typeString": "literal_string \"deadline not passed\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9902:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9902:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "9902:46:0"
                },
                {
                  "assignments": [377],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "9997:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9997:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 380,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "10014:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "10014:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9997:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "10113:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 383,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "10093:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "10093:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10093:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "10122:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "10130:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "10070:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeFullStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6261,
                      "src": "10070:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address) returns (uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10070:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 355,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "10063:77:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to retrieve the remaining stake once the agreement has ended\n @dev Access Control: staker OR operator\n      State Machine: after Countdown.isOver()\n @param recipient address of the account where to send the stake\n @return amount uint256 amount of tokens (18 decimals) retrieved",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "9674:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9673:19:0"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "9709:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9709:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9708:16:0"
            },
            "scope": 597,
            "src": "9651:496:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "10405:177:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 400,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "10470:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10470:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "10450:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "10450:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10450:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10483:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "10442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10442:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "10442:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "10566:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "10539:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "10539:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:36:0"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "10380:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10380:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10379:18:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10405:0:0"
            },
            "scope": 597,
            "src": "10354:228:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "10756:169:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 419,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "10821:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10821:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "10801:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "10801:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10801:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10834:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "10793:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "10890:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5128,
                      "src": "10890:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10890:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "10890:28:0"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10746:2:0"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10756:0:0"
            },
            "scope": 597,
            "src": "10721:204:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "11112:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 436,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "11129:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "11129:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "11122:19:0"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11072:2:0"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "11096:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11096:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11095:16:0"
            },
            "scope": 597,
            "src": "11054:94:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "11397:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 447,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "11414:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 448,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "11424:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11424:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11414:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 451,
                  "nodeType": "Return",
                  "src": "11407:28:0"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "11343:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11343:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11342:16:0"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "11382:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11381:15:0"
            },
            "scope": 597,
            "src": "11325:117:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "11640:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "11657:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "11657:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 457,
                  "id": 460,
                  "nodeType": "Return",
                  "src": "11650:25:0"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11594:2:0"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "11618:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11617:22:0"
            },
            "scope": 597,
            "src": "11570:112:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "11943:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "11960:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 470,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "11970:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11970:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11960:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 468,
                  "id": 473,
                  "nodeType": "Return",
                  "src": "11953:34:0"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11889:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11889:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11888:16:0"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11928:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11928:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11927:15:0"
            },
            "scope": 597,
            "src": "11865:129:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "12269:125:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 482,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "12279:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 485,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "12309:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$27_storage",
                              "typeString": "struct CountdownGriefing.Data storage ref"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "12309:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 483,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "12289:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4938,
                        "src": "12289:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12289:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "12279:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "12279:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "12340:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "12378:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 491,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6701,
                            "src": "12349:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6701_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6429,
                          "src": "12349:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6396_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12349:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 495,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12339:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6396_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 496,
                  "nodeType": "Return",
                  "src": "12332:55:0"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12201:2:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "12225:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 477,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "12225:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "12254:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12224:44:0"
            },
            "scope": 597,
            "src": "12184:210:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "12580:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 507,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "12636:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$27_storage",
                                "typeString": "struct CountdownGriefing.Data storage ref"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "12636:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "12616:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "12616:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12616:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "12651:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$27_storage",
                            "typeString": "struct CountdownGriefing.Data storage ref"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "12651:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4337,
                        "src": "12597:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4337_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4336,
                      "src": "12597:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6396_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12597:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 502,
                  "id": 513,
                  "nodeType": "Return",
                  "src": "12590:74:0"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12541:2:0"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "12565:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12565:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12564:15:0"
            },
            "scope": 597,
            "src": "12524:147:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "12850:83:0",
              "statements": [
                {
                  "assignments": [521],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "12860:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 522,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "12883:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12883:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12860:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "12910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12925:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12910:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 519,
                  "id": 528,
                  "nodeType": "Return",
                  "src": "12903:23:0"
                }
              ]
            },
            "documentation": "@notice Validate if the current stake is greater than 0\n @return validity bool true if non-zero stake",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12811:2:0"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "12835:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12834:15:0"
            },
            "scope": 597,
            "src": "12794:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CountdownGriefing.AgreementStatus",
            "id": 534,
            "members": [
              {
                "id": 531,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "12962:13:0"
              },
              {
                "id": 532,
                "name": "isInCountdown",
                "nodeType": "EnumValue",
                "src": "12977:13:0"
              },
              {
                "id": 533,
                "name": "isTerminated",
                "nodeType": "EnumValue",
                "src": "12992:12:0"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "12939:67:0"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "13438:260:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 539,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "13452:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4041,
                      "src": "13452:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13452:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 546,
                          "name": "Countdown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4042,
                          "src": "13542:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                            "typeString": "type(contract Countdown)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4029,
                        "src": "13542:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13542:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 556,
                      "nodeType": "Block",
                      "src": "13631:61:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 553,
                              "name": "AgreementStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "13652:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                                "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "isInitialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13652:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$534",
                              "typeString": "enum CountdownGriefing.AgreementStatus"
                            }
                          },
                          "functionReturnParameters": 538,
                          "id": 555,
                          "nodeType": "Return",
                          "src": "13645:36:0"
                        }
                      ]
                    },
                    "id": 557,
                    "nodeType": "IfStatement",
                    "src": "13538:154:0",
                    "trueBody": {
                      "id": 552,
                      "nodeType": "Block",
                      "src": "13564:61:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 549,
                              "name": "AgreementStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "13585:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                                "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "isInCountdown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13585:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$534",
                              "typeString": "enum CountdownGriefing.AgreementStatus"
                            }
                          },
                          "functionReturnParameters": 538,
                          "id": 551,
                          "nodeType": "Return",
                          "src": "13578:36:0"
                        }
                      ]
                    }
                  },
                  "id": 558,
                  "nodeType": "IfStatement",
                  "src": "13448:244:0",
                  "trueBody": {
                    "id": 545,
                    "nodeType": "Block",
                    "src": "13472:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "13493:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                              "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isTerminated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13493:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$534",
                            "typeString": "enum CountdownGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 538,
                        "id": 544,
                        "nodeType": "Return",
                        "src": "13486:35:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isInCountdown: staker has triggered countdown to termination\n          - isTerminated: griefing agreement is over, staker can retrieve stake",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13390:2:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "13414:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$534",
                    "typeString": "enum CountdownGriefing.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 536,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 534,
                    "src": "13414:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13413:24:0"
            },
            "scope": 597,
            "src": "13363:335:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "13911:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 565,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "13928:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13928:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "13952:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13952:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "13928:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "13921:60:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13870:2:0"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "13896:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13896:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13895:15:0"
            },
            "scope": 597,
            "src": "13848:140:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "14201:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 577,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "14218:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14218:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "14242:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInCountdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14242:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "14218:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 576,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "14211:60:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n @return validity bool true if correct state",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInCountdown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14160:2:0"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "14186:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14186:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14185:15:0"
            },
            "scope": 597,
            "src": "14138:140:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "14489:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 589,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "14506:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14506:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "14530:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isTerminated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14530:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "14506:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 588,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "14499:59:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isTerminated state\n @return validity bool true if correct state",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTerminated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14448:2:0"
            },
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "14474:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14474:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14473:15:0"
            },
            "scope": 597,
            "src": "14427:138:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 598,
        "src": "1595:12972:0"
      }
    ],
    "src": "0:14568:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/CountdownGriefing.sol",
    "exportedSymbols": {
      "CountdownGriefing": [597]
    },
    "id": 598,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".13"],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/helpers/openzeppelin-solidity/math/SafeMath.sol",
        "file": "../helpers/openzeppelin-solidity/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 3112,
        "src": "26:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Countdown.sol",
        "file": "../modules/Countdown.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 4043,
        "src": "87:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 5032,
        "src": "122:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 4355,
        "src": "156:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 5150,
        "src": "195:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 598,
        "sourceUnit": 6388,
        "src": "229:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Countdown",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4042,
              "src": "1625:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Countdown_$4042",
                "typeString": "contract Countdown"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1625:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5031,
              "src": "1636:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5031",
                "typeString": "contract Griefing"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "1636:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4354,
              "src": "1646:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4354",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "1646:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5149,
              "src": "1661:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5149",
                "typeString": "contract Operated"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1661:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6387,
              "src": "1671:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6387",
                "typeString": "contract Template"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1671:8:0"
          }
        ],
        "contractDependencies": [
          3825,
          3894,
          4042,
          4157,
          4337,
          4354,
          5031,
          5149,
          6324,
          6387,
          6701
        ],
        "contractKind": "contract",
        "documentation": "@title CountdownGriefing\n @author Stephane Gosselin (@thegostep) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/CountdownGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time before the end of the countdown.\n             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 597,
        "linearizedBaseContracts": [
          597,
          6387,
          5149,
          4354,
          5031,
          6324,
          6701,
          3825,
          3894,
          4337,
          4042,
          4157
        ],
        "name": "CountdownGriefing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20,
            "libraryName": {
              "contractScope": null,
              "id": 18,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3111,
              "src": "1693:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1687:27:0",
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1706:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 22,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 597,
            "src": "1720:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$27_storage",
              "typeString": "struct CountdownGriefing.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 21,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27,
              "src": "1720:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$27_storage_ptr",
                "typeString": "struct CountdownGriefing.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "CountdownGriefing.Data",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1766:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1766:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1790:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1790:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 597,
            "src": "1744:73:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 45,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1850:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1876:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1900:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1930:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 34,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "1930:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1967:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "1990:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "1990:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "countdownLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2028:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2061:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:241:0"
            },
            "src": "1823:259:0"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "3870:674:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3910:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$27_storage",
                          "typeString": "struct CountdownGriefing.Data storage ref"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "3925:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3910:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3941:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$27_storage",
                          "typeString": "struct CountdownGriefing.Data storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3941:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3962:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3941:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:33:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4013:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4033:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4025:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4025:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4013:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 90,
                  "nodeType": "IfStatement",
                  "src": "4009:84:0",
                  "trueBody": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "4037:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "4051:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5071,
                            "src": "4051:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4051:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "4051:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4152:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4160:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4169:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4176:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "4133:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "4133:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "countdownLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4250:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "4229:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3923,
                      "src": "4229:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4229:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:37:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "4305:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4305:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4324:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4305:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 117,
                  "nodeType": "IfStatement",
                  "src": "4301:87:0",
                  "trueBody": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "4327:61:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "4368:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4354,
                              "src": "4341:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "4341:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "4341:36:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "4452:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4462:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "4470:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4484:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4500:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "countdownLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "4511:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 126,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "4528:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 118,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4440:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,uint256,bytes memory)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4440:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "EmitStatement",
                  "src": "4435:102:0"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 64,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 63,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6349,
                  "src": "3849:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3849:20:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3603:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3629:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3653:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3653:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3683:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 52,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "3683:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3720:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3743:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 56,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "3743:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "name": "countdownLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3781:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3814:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3814:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3593:248:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:0:0"
            },
            "scope": 597,
            "src": "3574:970:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "4799:175:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 138,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "4864:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4864:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "4844:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "4844:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4844:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4877:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4958:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "4931:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4353,
                      "src": "4931:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4931:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "4931:36:0"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "4769:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4769:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4768:23:0"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4799:0:0"
            },
            "scope": 597,
            "src": "4748:226:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "5407:420:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 158,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5461:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5461:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 157,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5452:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5452:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 163,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5496:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5496:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5476:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5476:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5476:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5452:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5509:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5444:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5444:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5596:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 171,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "5597:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5597:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5613:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5588:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5588:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:43:0"
                },
                {
                  "assignments": [178],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5680:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5680:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5697:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "5697:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5680:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "5779:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5759:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5759:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5759:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "5788:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "5796:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5796:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "5808:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5741:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:79:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: before isTerminated()\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "5379:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5379:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5378:21:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5407:0:0"
            },
            "scope": 597,
            "src": "5356:471:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "6265:432:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6325:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6325:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 202,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "6310:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6310:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 208,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6360:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6360:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "6340:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "6340:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6340:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6310:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6373:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6302:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:103:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6466:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 216,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "6467:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6467:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6483:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6458:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "6458:43:0"
                },
                {
                  "assignments": [223],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "6550:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6550:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6567:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "6567:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6550:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6649:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "6629:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "6629:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6629:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "6658:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "6666:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6666:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "6678:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "6611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "6611:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6611:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "6611:79:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: before isTerminated()\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "6237:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6237:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6236:21:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6265:0:0"
            },
            "scope": 597,
            "src": "6221:476:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "7611:351:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 252,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7671:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7671:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 251,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "7656:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7656:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7706:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7706:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7686:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7686:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7686:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7656:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7719:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7648:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:103:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7812:15:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 265,
                            "name": "isTerminated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "7813:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7813:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61677265656d656e7420656e646564",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7829:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        },
                        "value": "agreement ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ea63126b3b0665726829f957297f446bab78082fc46e7f86e78dcfded86744",
                          "typeString": "literal_string \"agreement ended\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7804:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "7909:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7909:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "7921:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$27_storage",
                            "typeString": "struct CountdownGriefing.Data storage ref"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "7921:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "punishment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "7935:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "7947:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "7893:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_grief",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4904,
                      "src": "7893:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7893:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 280,
                  "nodeType": "Return",
                  "src": "7886:69:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: before isTerminated()\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7539:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7539:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7559:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7559:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7538:42:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "7597:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7597:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7596:14:0"
            },
            "scope": 597,
            "src": "7523:439:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "8290:360:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 289,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "8350:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8350:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 288,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "8335:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8335:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "8385:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8385:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "8365:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "8365:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8365:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8335:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8398:31:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8327:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8327:103:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "8327:103:0"
                },
                {
                  "assignments": [302],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "8479:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8479:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 305,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 303,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "8496:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "8496:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8479:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "8602:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 309,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "8582:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "8582:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8582:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "8611:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "8619:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "amountToRelease",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "8627:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "8563:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6232,
                      "src": "8563:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:80:0"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "amountToRelease",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "8258:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8258:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8257:25:0"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8290:0:0"
            },
            "scope": 597,
            "src": "8236:414:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "9001:301:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 326,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9055:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9055:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 325,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "9046:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9046:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 331,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9090:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9090:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "9070:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "9070:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9070:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9046:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9103:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9038:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 339,
                          "name": "isInitialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "9192:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9192:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646561646c696e6520616c726561647920736574",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9209:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e251cf37b2e12fd04de90f35751eea0b9792a1611eb1f01a4e79fb7f6797acc6",
                          "typeString": "literal_string \"deadline already set\""
                        },
                        "value": "deadline already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e251cf37b2e12fd04de90f35751eea0b9792a1611eb1f01a4e79fb7f6797acc6",
                          "typeString": "literal_string \"deadline already set\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9184:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9184:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "9184:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "9277:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3944,
                      "src": "9277:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 323,
                  "id": 347,
                  "nodeType": "Return",
                  "src": "9270:25:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to begin countdown to finalize the agreement\n @dev Access Control: staker OR operator\n      State Machine: before Countdown.isActive()\n @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startCountdown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8964:2:0"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "8983:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8983:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8982:18:0"
            },
            "scope": 597,
            "src": "8941:361:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "9725:422:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 358,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9779:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9779:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 357,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "9770:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9770:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 363,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "9814:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9814:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 361,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "9794:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "9794:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9794:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9770:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9827:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9762:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9762:91:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9762:91:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 371,
                          "name": "isTerminated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 596,
                          "src": "9910:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9910:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646561646c696e65206e6f7420706173736564",
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9926:21:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e3c3ed466b4494ab1c7e64434ab6a1a9840cdcc664320d0be16ffd1314382b5",
                          "typeString": "literal_string \"deadline not passed\""
                        },
                        "value": "deadline not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e3c3ed466b4494ab1c7e64434ab6a1a9840cdcc664320d0be16ffd1314382b5",
                          "typeString": "literal_string \"deadline not passed\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "9902:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9902:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "9902:46:0"
                },
                {
                  "assignments": [377],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "9997:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9997:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 380,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "10014:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "10014:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9997:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "10113:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 383,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "10093:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "10093:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10093:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "10122:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "10130:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "10070:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeFullStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6261,
                      "src": "10070:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address) returns (uint256)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10070:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 355,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "10063:77:0"
                }
              ]
            },
            "documentation": "@notice Called by the staker to retrieve the remaining stake once the agreement has ended\n @dev Access Control: staker OR operator\n      State Machine: after Countdown.isOver()\n @param recipient address of the account where to send the stake\n @return amount uint256 amount of tokens (18 decimals) retrieved",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "9674:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9673:19:0"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "9709:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9709:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9708:16:0"
            },
            "scope": 597,
            "src": "9651:496:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "10405:177:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 400,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "10470:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10470:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "10450:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "10450:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10450:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10483:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "10442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10442:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "10442:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "10566:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "10539:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "10539:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:36:0"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "10380:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10380:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10379:18:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10405:0:0"
            },
            "scope": 597,
            "src": "10354:228:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "10756:169:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 419,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "10821:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10821:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "10801:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "10801:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10801:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10834:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "10793:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "10890:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5128,
                      "src": "10890:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10890:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "10890:28:0"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10746:2:0"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10756:0:0"
            },
            "scope": 597,
            "src": "10721:204:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "11112:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 436,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "11129:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "11129:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "11122:19:0"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11072:2:0"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "11096:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11096:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11095:16:0"
            },
            "scope": 597,
            "src": "11054:94:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "11397:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 447,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "11414:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 448,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "11424:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11424:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11414:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 451,
                  "nodeType": "Return",
                  "src": "11407:28:0"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "11343:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11343:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11342:16:0"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "11382:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11381:15:0"
            },
            "scope": 597,
            "src": "11325:117:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 461,
              "nodeType": "Block",
              "src": "11640:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "11657:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$27_storage",
                        "typeString": "struct CountdownGriefing.Data storage ref"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 26,
                    "src": "11657:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 457,
                  "id": 460,
                  "nodeType": "Return",
                  "src": "11650:25:0"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11594:2:0"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "11618:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11618:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11617:22:0"
            },
            "scope": 597,
            "src": "11570:112:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "11943:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "11960:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 470,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "11970:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11970:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11960:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 468,
                  "id": 473,
                  "nodeType": "Return",
                  "src": "11953:34:0"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11889:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11889:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11888:16:0"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "11928:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11928:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11927:15:0"
            },
            "scope": 597,
            "src": "11865:129:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "12269:125:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 482,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "12279:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 485,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "12309:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$27_storage",
                              "typeString": "struct CountdownGriefing.Data storage ref"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "12309:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 483,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "12289:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4938,
                        "src": "12289:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12289:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "12279:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "12279:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "12340:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "12378:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 491,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6701,
                            "src": "12349:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6701_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6429,
                          "src": "12349:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6396_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12349:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 495,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12339:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6396_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 496,
                  "nodeType": "Return",
                  "src": "12332:55:0"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12201:2:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "12225:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 477,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "12225:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "12254:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12224:44:0"
            },
            "scope": 597,
            "src": "12184:210:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "12580:91:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 507,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "12636:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$27_storage",
                                "typeString": "struct CountdownGriefing.Data storage ref"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "12636:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 505,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "12616:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "12616:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12616:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "12651:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$27_storage",
                            "typeString": "struct CountdownGriefing.Data storage ref"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "12651:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4337,
                        "src": "12597:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4337_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4336,
                      "src": "12597:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6396_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12597:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 502,
                  "id": 513,
                  "nodeType": "Return",
                  "src": "12590:74:0"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12541:2:0"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "12565:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12565:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12564:15:0"
            },
            "scope": 597,
            "src": "12524:147:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "12850:83:0",
              "statements": [
                {
                  "assignments": [521],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "12860:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 524,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 522,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "12883:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12883:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12860:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 525,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "12910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12925:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12910:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 519,
                  "id": 528,
                  "nodeType": "Return",
                  "src": "12903:23:0"
                }
              ]
            },
            "documentation": "@notice Validate if the current stake is greater than 0\n @return validity bool true if non-zero stake",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12811:2:0"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "12835:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12835:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12834:15:0"
            },
            "scope": 597,
            "src": "12794:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CountdownGriefing.AgreementStatus",
            "id": 534,
            "members": [
              {
                "id": 531,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "12962:13:0"
              },
              {
                "id": 532,
                "name": "isInCountdown",
                "nodeType": "EnumValue",
                "src": "12977:13:0"
              },
              {
                "id": 533,
                "name": "isTerminated",
                "nodeType": "EnumValue",
                "src": "12992:12:0"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "12939:67:0"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "13438:260:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 539,
                        "name": "Countdown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "13452:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                          "typeString": "type(contract Countdown)"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isOver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4041,
                      "src": "13452:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13452:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 546,
                          "name": "Countdown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4042,
                          "src": "13542:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Countdown_$4042_$",
                            "typeString": "type(contract Countdown)"
                          }
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4029,
                        "src": "13542:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13542:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 556,
                      "nodeType": "Block",
                      "src": "13631:61:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 553,
                              "name": "AgreementStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "13652:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                                "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "isInitialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13652:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$534",
                              "typeString": "enum CountdownGriefing.AgreementStatus"
                            }
                          },
                          "functionReturnParameters": 538,
                          "id": 555,
                          "nodeType": "Return",
                          "src": "13645:36:0"
                        }
                      ]
                    },
                    "id": 557,
                    "nodeType": "IfStatement",
                    "src": "13538:154:0",
                    "trueBody": {
                      "id": 552,
                      "nodeType": "Block",
                      "src": "13564:61:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 549,
                              "name": "AgreementStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "13585:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                                "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "isInCountdown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13585:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$534",
                              "typeString": "enum CountdownGriefing.AgreementStatus"
                            }
                          },
                          "functionReturnParameters": 538,
                          "id": 551,
                          "nodeType": "Return",
                          "src": "13578:36:0"
                        }
                      ]
                    }
                  },
                  "id": 558,
                  "nodeType": "IfStatement",
                  "src": "13448:244:0",
                  "trueBody": {
                    "id": 545,
                    "nodeType": "Block",
                    "src": "13472:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "13493:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                              "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isTerminated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13493:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$534",
                            "typeString": "enum CountdownGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 538,
                        "id": 544,
                        "nodeType": "Return",
                        "src": "13486:35:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isInCountdown: staker has triggered countdown to termination\n          - isTerminated: griefing agreement is over, staker can retrieve stake",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13390:2:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "13414:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$534",
                    "typeString": "enum CountdownGriefing.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 536,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 534,
                    "src": "13414:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13413:24:0"
            },
            "scope": 597,
            "src": "13363:335:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "13911:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 565,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "13928:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13928:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "13952:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13952:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "13928:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 564,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "13921:60:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13870:2:0"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "13896:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13896:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13895:15:0"
            },
            "scope": 597,
            "src": "13848:140:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "14201:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 577,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "14218:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14218:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 579,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "14242:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInCountdown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14242:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "14218:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 576,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "14211:60:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n @return validity bool true if correct state",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInCountdown",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14160:2:0"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "14186:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14186:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14185:15:0"
            },
            "scope": 597,
            "src": "14138:140:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "14489:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$534",
                      "typeString": "enum CountdownGriefing.AgreementStatus"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 589,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "14506:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "function () view returns (enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14506:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "14530:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$534_$",
                          "typeString": "type(enum CountdownGriefing.AgreementStatus)"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isTerminated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14530:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$534",
                        "typeString": "enum CountdownGriefing.AgreementStatus"
                      }
                    },
                    "src": "14506:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 588,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "14499:59:0"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isTerminated state\n @return validity bool true if correct state",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTerminated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14448:2:0"
            },
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "14474:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14474:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14473:15:0"
            },
            "scope": 597,
            "src": "14427:138:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 598,
        "src": "1595:12972:0"
      }
    ],
    "src": "0:14568:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  },
  "networks": {},
  "schemaVersion": "2.2.4",
  "updatedAt": "2020-01-08T17:56:10.830Z"
}
