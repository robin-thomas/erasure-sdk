{
  "contractName": "SimpleGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum SimpleGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506135e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806372b45a55116100ad578063e7f43c6811610071578063e7f43c681461057b578063ed251a42146105c5578063ee57e36f14610704578063eedad66b146107bf578063fc0e3d90146107ed57610121565b806372b45a5514610373578063754b2707146103bd57806388cc58e41461042a57806390bfe0bf14610474578063a9fb763c1461054d57610121565b80632ab6f8db116100f45780632ab6f8db1461023f57806345f5448514610249578063465b414e146102775780635baeb806146102d0578063728fa4941461032957610121565b80630ee2cb10146101265780631723537d1461017057806321df0da71461019c57806329605e77146101fb575b600080fd5b61012e61080b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101786108ec565b6040518082600181111561018857fe5b60ff16815260200191505060405180910390f35b6101a4610915565b604051808360028111156101b457fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61023d6004803603602081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095a565b005b6102476109e1565b005b6102756004803603602081101561025f57600080fd5b8101908080359060200190929190505050610a66565b005b6102ba6004803603606081101561028d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610b34565b6040518082815260200191505060405180910390f35b610313600480360360608110156102e657600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610c1f565b6040518082815260200191505060405180910390f35b610331610d52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b610d7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ff600480360360208110156103d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dac565b6040518083815260200182600281111561041557fe5b60ff1681526020019250505060405180910390f35b610432610e4b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105376004803603604081101561048a57600080fd5b8101908080359060200190929190803590602001906401000000008111156104b157600080fd5b8201836020820111156104c357600080fd5b803590602001918460018302840111640100000000831117156104e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e75565b6040518082815260200191505060405180910390f35b6105796004803603602081101561056357600080fd5b8101908080359060200190929190505050610f3b565b005b610583611009565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610702600480360360e08110156105db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561067c57600080fd5b82018360208201111561068e57600080fd5b803590602001918460018302840111640100000000831117156106b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611033565b005b6107bd6004803603602081101561071a57600080fd5b810190808035906020019064010000000081111561073757600080fd5b82018360208201111561074957600080fd5b8035906020019184600183028401116401000000008311171561076b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611334565b005b6107eb600480360360208110156107d557600080fd5b81019080803590602001909291905050506113bb565b005b6107f5611489565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156108ac57600080fd5b505afa1580156108c0573d6000803e3d6000fd5b505050506040513d60208110156108d657600080fd5b8101908080519060200190929190505050905090565b6000806108f7611489565b9050600081111561090c576001915050610912565b60009150505b90565b600080610946600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166114ec565b91508161095283611545565b915091509091565b61096333611623565b6109d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6109de8161167d565b50565b6109ea33611623565b610a5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610a6461188c565b565b610a6f336119f9565b80610a7f5750610a7e33611623565b5b610af1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610b2f610b27826114ec565b828385611a38565b505050565b6000600280811115610b4257fe5b826002811115610b4e57fe5b1415610b7f576012600a0a610b70610b6a856012600a0a611a5d565b86611ae3565b81610b7757fe5b049050610c18565b60016002811115610b8c57fe5b826002811115610b9857fe5b1415610ba75760009050610c18565b60006002811115610bb457fe5b826002811115610bc057fe5b1415610c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135656021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610c2d57fe5b826002811115610c3957fe5b1415610c6a576012600a0a610c5b610c55856012600a0a611a5d565b86611b1b565b81610c6257fe5b049050610d4b565b60016002811115610c7757fe5b826002811115610c8357fe5b1415610cda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f96021913960400191505060405180910390fd5b60006002811115610ce757fe5b826002811115610cf357fe5b1415610d4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135656021913960400191505060405180910390fd5b5b9392505050565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610e80336119f9565b80610e905750610e8f33611623565b5b610f02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b610f3333600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585611b4f565b905092915050565b610f44336119f9565b80610f545750610f5333611623565b5b610fc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611004610ffc826114ec565b823385611e12565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff16146110d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061353b602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461119f5761119e88611e38565b5b6111ab87868686612046565b60008251146111be576111bd82612305565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561128c57fe5b60ff1681526020018481526020018360028111156112a657fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112ea5780820151818401526020810190506112cf565b50505050905090810190601f1680156113175780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b61133d33611623565b6113af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6113b881612305565b50565b6113c4336123a4565b806113d457506113d333611623565b5b611446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061148461147c826114ec565b823385611e12565b505050565b60006114e76114bc600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166114ec565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166123e3565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b600061155082612448565b6115c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156115ce57fe5b8260028111156115da57fe5b14156115ef576115e861248b565b905061161e565b600160028111156115fc57fe5b82600281111561160857fe5b141561161d576116166124a7565b905061161e565b5b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611742576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611a03610d52565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000611a458585846124c3565b9050611a528584846126a1565b809050949350505050565b600080831415611a705760009050611add565b6000828402905082848281611a8157fe5b0414611ad8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061351a6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611b0b611af78585611a5d565b60026012600a0a81611b0557fe5b046127e2565b81611b1257fe5b04905092915050565b600081611b3f611b2f856012600a0a611a5d565b60028581611b3957fe5b046127e2565b81611b4657fe5b04905092915050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115611c4c57fe5b826002811115611c5857fe5b1415611ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b611cd7838784610b34565b9350611ce481898661286a565b611cef818888612939565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611dc6578082015181840152602081019050611dab565b50505050905090810190601f168015611df35780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000611e1f8585846129df565b9050611e2d85843085612b42565b809050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611efc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561205357fe5b81600281111561205f57fe5b148061208157506001600281111561207357fe5b81600281111561207f57fe5b145b156120e057600082146120df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613586602c913960400191505060405180910390fd5b5b6120e983612448565b61215b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156121b957fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600281111561226357fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018460028111156122cf57fe5b60ff1681526020018381526020018260028111156122e957fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561236757808201518184015260208101905061234c565b50505050905090810190601f1680156123945780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60006123ae610d7f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60008060008460028111156123f457fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001600281111561245757fe5b82600281111561246357fe5b1480612484575060028081111561247657fe5b82600281111561248257fe5b145b9050919050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000806000808660028111156124d557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6125ac8382612cb890919063ffffffff16565b9150816000808760028111156125be57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f357858585856040518085600281111561264257fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b6126aa83611545565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561273057600080fd5b505af1158015612744573d6000803e3d6000fd5b505050506040513d602081101561275a57600080fd5b81019080805190602001909291905050506127dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050565b600080828401905083811015612860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60028081111561287657fe5b83600281111561288257fe5b1415612897576128928282612d41565b612934565b600160028111156128a457fe5b8360028111156128b057fe5b14156128c5576128c08282612e59565b612933565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b505050565b6000806129478585856124c3565b90506129538584612fa5565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b8585856040518084600281111561298757fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612a4e826000808760028111156129f457fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127e290919063ffffffff16565b905080600080866002811115612a6057fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c8484848460405180856002811115612ae457fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b612b4b84611545565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612c0557600080fd5b505af1158015612c19573d6000803e3d6000fd5b505050506040513d6020811015612c2f57600080fd5b8101908080519060200190929190505050612cb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b600082821115612d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612e1057600080fd5b505af1158015612e24573d6000803e3d6000fd5b505050506040513d6020811015612e3a57600080fd5b810190808051906020019092919050505050612e5581613071565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612ef457600080fd5b505af1158015612f08573d6000803e3d6000fd5b505050506040513d6020811015612f1e57600080fd5b8101908080519060200190929190505050612fa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b600280811115612fb157fe5b826002811115612fbd57fe5b1415612fd157612fcc81613071565b61306d565b60016002811115612fde57fe5b826002811115612fea57fe5b1415612ffe57612ff981613280565b61306c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561312057600080fd5b505af1158015613134573d6000803e3d6000fd5b505050506040513d602081101561314a57600080fd5b810190808051906020019092919050505050600081905060008061316d83613397565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7868686866131b46124a7565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b15801561323257600080fd5b505af1158015613246573d6000803e3d6000fd5b505050506040513d602081101561325c57600080fd5b8101908080519060200190929190505050905061327881613280565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156132e757600080fd5b505af11580156132fb573d6000803e3d6000fd5b505050506040513d602081101561331157600080fd5b8101908080519060200190929190505050613394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156133ff57600080fd5b505afa158015613413573d6000803e3d6000fd5b505050506040513d602081101561342957600080fd5b810190808051906020019092919050505090506134446134dc565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561349457600080fd5b505afa1580156134a8573d6000803e3d6000fd5b505050506040513d60208110156134be57600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a7231582067131a73f9392f3c14a89fe22a5732511c5c29ec7ab1604f381de32b0c93d4e464736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806372b45a55116100ad578063e7f43c6811610071578063e7f43c681461057b578063ed251a42146105c5578063ee57e36f14610704578063eedad66b146107bf578063fc0e3d90146107ed57610121565b806372b45a5514610373578063754b2707146103bd57806388cc58e41461042a57806390bfe0bf14610474578063a9fb763c1461054d57610121565b80632ab6f8db116100f45780632ab6f8db1461023f57806345f5448514610249578063465b414e146102775780635baeb806146102d0578063728fa4941461032957610121565b80630ee2cb10146101265780631723537d1461017057806321df0da71461019c57806329605e77146101fb575b600080fd5b61012e61080b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101786108ec565b6040518082600181111561018857fe5b60ff16815260200191505060405180910390f35b6101a4610915565b604051808360028111156101b457fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61023d6004803603602081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095a565b005b6102476109e1565b005b6102756004803603602081101561025f57600080fd5b8101908080359060200190929190505050610a66565b005b6102ba6004803603606081101561028d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610b34565b6040518082815260200191505060405180910390f35b610313600480360360608110156102e657600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610c1f565b6040518082815260200191505060405180910390f35b610331610d52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b610d7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ff600480360360208110156103d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dac565b6040518083815260200182600281111561041557fe5b60ff1681526020019250505060405180910390f35b610432610e4b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105376004803603604081101561048a57600080fd5b8101908080359060200190929190803590602001906401000000008111156104b157600080fd5b8201836020820111156104c357600080fd5b803590602001918460018302840111640100000000831117156104e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e75565b6040518082815260200191505060405180910390f35b6105796004803603602081101561056357600080fd5b8101908080359060200190929190505050610f3b565b005b610583611009565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610702600480360360e08110156105db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561067c57600080fd5b82018360208201111561068e57600080fd5b803590602001918460018302840111640100000000831117156106b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611033565b005b6107bd6004803603602081101561071a57600080fd5b810190808035906020019064010000000081111561073757600080fd5b82018360208201111561074957600080fd5b8035906020019184600183028401116401000000008311171561076b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611334565b005b6107eb600480360360208110156107d557600080fd5b81019080803590602001909291905050506113bb565b005b6107f5611489565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156108ac57600080fd5b505afa1580156108c0573d6000803e3d6000fd5b505050506040513d60208110156108d657600080fd5b8101908080519060200190929190505050905090565b6000806108f7611489565b9050600081111561090c576001915050610912565b60009150505b90565b600080610946600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166114ec565b91508161095283611545565b915091509091565b61096333611623565b6109d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6109de8161167d565b50565b6109ea33611623565b610a5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610a6461188c565b565b610a6f336119f9565b80610a7f5750610a7e33611623565b5b610af1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610b2f610b27826114ec565b828385611a38565b505050565b6000600280811115610b4257fe5b826002811115610b4e57fe5b1415610b7f576012600a0a610b70610b6a856012600a0a611a5d565b86611ae3565b81610b7757fe5b049050610c18565b60016002811115610b8c57fe5b826002811115610b9857fe5b1415610ba75760009050610c18565b60006002811115610bb457fe5b826002811115610bc057fe5b1415610c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135656021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610c2d57fe5b826002811115610c3957fe5b1415610c6a576012600a0a610c5b610c55856012600a0a611a5d565b86611b1b565b81610c6257fe5b049050610d4b565b60016002811115610c7757fe5b826002811115610c8357fe5b1415610cda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f96021913960400191505060405180910390fd5b60006002811115610ce757fe5b826002811115610cf357fe5b1415610d4a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135656021913960400191505060405180910390fd5b5b9392505050565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610e80336119f9565b80610e905750610e8f33611623565b5b610f02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b610f3333600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585611b4f565b905092915050565b610f44336119f9565b80610f545750610f5333611623565b5b610fc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611004610ffc826114ec565b823385611e12565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff16146110d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061353b602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461119f5761119e88611e38565b5b6111ab87868686612046565b60008251146111be576111bd82612305565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561128c57fe5b60ff1681526020018481526020018360028111156112a657fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112ea5780820151818401526020810190506112cf565b50505050905090810190601f1680156113175780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b61133d33611623565b6113af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6113b881612305565b50565b6113c4336123a4565b806113d457506113d333611623565b5b611446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061148461147c826114ec565b823385611e12565b505050565b60006114e76114bc600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166114ec565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166123e3565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b600061155082612448565b6115c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156115ce57fe5b8260028111156115da57fe5b14156115ef576115e861248b565b905061161e565b600160028111156115fc57fe5b82600281111561160857fe5b141561161d576116166124a7565b905061161e565b5b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611742576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611a03610d52565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000611a458585846124c3565b9050611a528584846126a1565b809050949350505050565b600080831415611a705760009050611add565b6000828402905082848281611a8157fe5b0414611ad8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061351a6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611b0b611af78585611a5d565b60026012600a0a81611b0557fe5b046127e2565b81611b1257fe5b04905092915050565b600081611b3f611b2f856012600a0a611a5d565b60028581611b3957fe5b046127e2565b81611b4657fe5b04905092915050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115611c4c57fe5b826002811115611c5857fe5b1415611ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b611cd7838784610b34565b9350611ce481898661286a565b611cef818888612939565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611dc6578082015181840152602081019050611dab565b50505050905090810190601f168015611df35780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000611e1f8585846129df565b9050611e2d85843085612b42565b809050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611efc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f9f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561205357fe5b81600281111561205f57fe5b148061208157506001600281111561207357fe5b81600281111561207f57fe5b145b156120e057600082146120df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613586602c913960400191505060405180910390fd5b5b6120e983612448565b61215b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156121b957fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600281111561226357fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018460028111156122cf57fe5b60ff1681526020018381526020018260028111156122e957fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561236757808201518184015260208101905061234c565b50505050905090810190601f1680156123945780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60006123ae610d7f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60008060008460028111156123f457fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006001600281111561245757fe5b82600281111561246357fe5b1480612484575060028081111561247657fe5b82600281111561248257fe5b145b9050919050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000806000808660028111156124d557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6125ac8382612cb890919063ffffffff16565b9150816000808760028111156125be57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f357858585856040518085600281111561264257fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b6126aa83611545565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561273057600080fd5b505af1158015612744573d6000803e3d6000fd5b505050506040513d602081101561275a57600080fd5b81019080805190602001909291905050506127dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b505050565b600080828401905083811015612860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60028081111561287657fe5b83600281111561288257fe5b1415612897576128928282612d41565b612934565b600160028111156128a457fe5b8360028111156128b057fe5b14156128c5576128c08282612e59565b612933565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b505050565b6000806129478585856124c3565b90506129538584612fa5565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b8585856040518084600281111561298757fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612a4e826000808760028111156129f457fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127e290919063ffffffff16565b905080600080866002811115612a6057fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c8484848460405180856002811115612ae457fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b612b4b84611545565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612c0557600080fd5b505af1158015612c19573d6000803e3d6000fd5b505050506040513d6020811015612c2f57600080fd5b8101908080519060200190929190505050612cb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b600082821115612d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612e1057600080fd5b505af1158015612e24573d6000803e3d6000fd5b505050506040513d6020811015612e3a57600080fd5b810190808051906020019092919050505050612e5581613071565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612ef457600080fd5b505af1158015612f08573d6000803e3d6000fd5b505050506040513d6020811015612f1e57600080fd5b8101908080519060200190929190505050612fa1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b600280811115612fb157fe5b826002811115612fbd57fe5b1415612fd157612fcc81613071565b61306d565b60016002811115612fde57fe5b826002811115612fea57fe5b1415612ffe57612ff981613280565b61306c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b5b5050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561312057600080fd5b505af1158015613134573d6000803e3d6000fd5b505050506040513d602081101561314a57600080fd5b810190808051906020019092919050505050600081905060008061316d83613397565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7868686866131b46124a7565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b15801561323257600080fd5b505af1158015613246573d6000803e3d6000fd5b505050506040513d602081101561325c57600080fd5b8101908080519060200190929190505050905061327881613280565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156132e757600080fd5b505af11580156132fb573d6000803e3d6000fd5b505050506040513d602081101561331157600080fd5b8101908080519060200190929190505050613394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156133ff57600080fd5b505afa158015613413573d6000803e3d6000fd5b505050506040513d602081101561342957600080fd5b810190808051906020019092919050505090506134446134dc565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561349457600080fd5b505afa1580156134a8573d6000803e3d6000fd5b505050506040513d60208110156134be57600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a7231582067131a73f9392f3c14a89fe22a5732511c5c29ec7ab1604f381de32b0c93d4e464736f6c634300050d0032",
  "sourceMap": "1482:10055:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1482:10055:2;;;;;;;",
  "deployedSourceMap": "1482:10055:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1482:10055:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:229:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10691:279:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9912:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8082:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8082:228:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;8449:204;;;:::i;:::-;;7461:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7461:414:2;;;;;;;;;;;;;;;;;:::i;:::-;;5355:393:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5355:393:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6384:428;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6384:428:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9298:112:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8782:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4244:212:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4244:212:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:92:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6844:343:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6844:343:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6844:343:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6844:343:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6844:343:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6844:343:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5652:380;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5652:380:2;;;;;;;;;;;;;;;;;:::i;:::-;;1455:95:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3259:840:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3259:840:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3259:840:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3259:840:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3259:840:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3259:840:2;;;;;;;;;;;;;;;:::i;:::-;;4303:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4303:226:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4303:226:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4303:226:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4303:226:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4303:226:2;;;;;;;;;;;;;;;:::i;:::-;;4897:375;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4897:375:2;;;;;;;;;;;;;;;;;:::i;:::-;;10252:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1135:229:26;1178:15;1314:8;;;;;;;;;;;1305:37;;;1351:4;1305:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:52:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:52:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1305:52:26;;;;;;;;;;;;;;;;1298:59;;1135:229;:::o;10691:279:2:-;10742:22;10776:20;10799:10;:8;:10::i;:::-;10776:33;;10838:1;10823:12;:16;10819:145;;;10862:24;10855:31;;;;;10819:145;10924:29;10917:36;;;10691:279;;:::o;9912:210::-;9953:27;9982:13;10017:33;10037:5;:12;;;;;;;;;;;;10017:19;:33::i;:::-;10007:43;;10068:7;10077:37;10106:7;10077:28;:37::i;:::-;10060:55;;;;9912:210;;:::o;8082:228::-;8178:31;8198:10;8178:19;:31::i;:::-;8170:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8267:36;8294:8;8267:26;:36::i;:::-;8082:228;:::o;8449:204::-;8529:31;8549:10;8529:19;:31::i;:::-;8521:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8618:28;:26;:28::i;:::-;8449:204::o;7461:414::-;7560:26;7575:10;7560:14;:26::i;:::-;:61;;;;7590:31;7610:10;7590:19;:31::i;:::-;7560:61;7552:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7704:14;7721:5;:12;;;;;;;;;;;;7704:29;;7788:80;7807:27;7827:6;7807:19;:27::i;:::-;7836:6;7844;7852:15;7788:18;:80::i;:::-;;7461:414;;:::o;5355:393:20:-;5448:12;5489:13;5476:26;;;;;;;;:9;:26;;;;;;;;;5472:110;;;948:2;933;925:26;5523:53;5539:29;5552:10;948:2;933;925:26;5539:12;:29::i;:::-;5570:5;5523:15;:53::i;:::-;:59;;;;;;5516:66;;;;5472:110;5609:13;5596:26;;;;;;;;:9;:26;;;;;;;;;5592:52;;;5643:1;5636:8;;;;5592:52;5671:13;5658:26;;;;;;;;:9;:26;;;;;;;;;5654:87;;;5698:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5654:87;5355:393;;;;;;:::o;6384:428::-;6477:18;6524:13;6511:26;;;;;;;;:9;:26;;;;;;;;;6507:104;;;948:2;933;925:26;6558:47;6574:23;6587:4;948:2;933;925:26;6574:12;:23::i;:::-;6599:5;6558:15;:47::i;:::-;:53;;;;;;6551:60;;;;6507:104;6638:13;6625:26;;;;;;;;:9;:26;;;;;;;;;6621:87;;;6665:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6621:87;6735:13;6722:26;;;;;;;;:9;:26;;;;;;;;;6718:87;;;6762:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6718:87;6384:428;;;;;;:::o;9298:112:2:-;9346:20;9385:5;:18;;;;;;;;;;;;9378:25;;9298:112;:::o;8782:94::-;8824:14;8857:5;:12;;;;;;;;;;;;8850:19;;8782:94;:::o;4244:212:20:-;4299:13;4314:19;4392:11;:19;4404:6;4392:19;;;;;;;;;;;;;;;:25;;;4419:11;:19;4431:6;4419:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4384:65;;;;4244:212;;;:::o;1771:92:26:-;1814:15;1848:8;;;;;;;;;;;1841:15;;1771:92;:::o;6844:343:2:-;6918:12;6977:26;6992:10;6977:14;:26::i;:::-;:61;;;;7007:31;7027:10;7007:19;:31::i;:::-;6977:61;6969:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7118:62;7134:10;7146:5;:12;;;;;;;;;;;;7160:10;7172:7;7118:15;:62::i;:::-;7111:69;;6844:343;;;;:::o;5652:380::-;5741:26;5756:10;5741:14;:26::i;:::-;:61;;;;5771:31;5791:10;5771:19;:31::i;:::-;5741:61;5733:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5885:14;5902:5;:12;;;;;;;;;;;;5885:29;;5946:79;5964:27;5984:6;5964:19;:27::i;:::-;5993:6;6001:10;6013:11;5946:17;:79::i;:::-;;5652:380;;:::o;1455:95:21:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;3259:840:2:-;601:10:26;590:8;;:21;;;;;;;;;;;;;;;;;;703:15;763:7;751:20;739:32;;802:1;790:8;:13;;;782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:6:2;3562:5;:12;;;:21;;;;;;;;;;;;;;;;;;3614:12;3593:5;:18;;;:33;;;;;;;;;;;;;;;;;;3685:1;3665:22;;:8;:22;;;3661:84;;3703:31;3725:8;3703:21;:31::i;:::-;3661:84;3785:53;3804:6;3812:7;3821:5;3828:9;3785:18;:53::i;:::-;3896:1;3877:8;:15;:20;3873:87;;3913:36;3940:8;3913:26;:36::i;:::-;3873:87;4012:80;4024:8;4034:6;4042:12;4056:7;4065:5;4072:9;4083:8;4012:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4012:80:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:840;;;;;;;;:::o;4303:226::-;4399:31;4419:10;4399:19;:31::i;:::-;4391:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:36;4513:8;4486:26;:36::i;:::-;4303:226;:::o;4897:375::-;4993:20;5002:10;4993:8;:20::i;:::-;:55;;;;5017:31;5037:10;5017:19;:31::i;:::-;4993:55;4985:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5125:14;5142:5;:12;;;;;;;;;;;;5125:29;;5186:79;5204:27;5224:6;5204:19;:27::i;:::-;5233:6;5241:10;5253:11;5186:17;:79::i;:::-;;4897:375;;:::o;10252:147::-;10293:13;10325:67;10344:33;10364:5;:12;;;;;;;;;;;;10344:19;:33::i;:::-;10379:5;:12;;;;;;;;;;;;10325:18;:67::i;:::-;10318:74;;10252:147;:::o;4622:180:20:-;4681:27;4767:11;:19;4779:6;4767:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4759:36;;4622:180;;;:::o;550:314:27:-;614:20;654:23;669:7;654:14;:23::i;:::-;646:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:10;709:21;;;;;;;;:7;:21;;;;;;;;;705:71;;;751:25;:23;:25::i;:::-;744:32;;;;705:71;801:10;790:21;;;;;;;;:7;:21;;;;;;;;;786:71;;;832:25;:23;:25::i;:::-;825:32;;;;786:71;550:314;;;;:::o;1556:111:21:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;725:410::-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;9593:129:2:-;9656:13;9698:17;:15;:17::i;:::-;9688:27;;:6;:27;;;9681:34;;9593:129;;;:::o;2215:408:25:-;2339:16;2404:55;2429:7;2438:6;2446:12;2404:24;:55::i;:::-;2393:66;;2507:56;2530:7;2539:9;2550:12;2507:22;:56::i;:::-;2608:8;2601:15;;2215:408;;;;;;:::o;233:458:9:-;291:7;536:1;531;:6;527:45;;;560:1;553:8;;;;527:45;582:9;598:1;594;:5;582:17;;626:1;621;617;:5;;;;;;:10;609:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:1;676:8;;;233:458;;;;;:::o;520:140:6:-;577:9;313:2;298;290:26;602:43;615:18;628:1;631;615:12;:18::i;:::-;643:1;313:2;298;290:26;635:9;;;;;;602:12;:43::i;:::-;:51;;;;;;598:55;;520:140;;;;:::o;854:136::-;911:9;982:1;936:43;949:22;962:1;313:2;298;290:26;949:12;:22::i;:::-;977:1;973;:5;;;;;;936:12;:43::i;:::-;:47;;;;;;932:51;;854:136;;;;:::o;2824:969:20:-;2972:12;3035:13;3051:11;:19;3063:6;3051:19;;;;;;;;;;;;;;;:25;;;3035:41;;3086:19;3108:11;:19;3120:6;3108:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3086:51;;3147:27;3177:11;:19;3189:6;3177:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3147:57;;3236:13;3223:26;;;;;;;;:9;:26;;;;;;;;;;3215:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:37;3403:5;3410:10;3422:9;3395:7;:37::i;:::-;3388:44;;3496:47;3519:7;3528:8;3538:4;3496:22;:47::i;:::-;3609;3628:7;3637:6;3645:10;3609:18;:47::i;:::-;;3694:52;3702:8;3712:6;3720:10;3732:4;3738:7;3694:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3694:52:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:4;3775:11;;;;;2824:969;;;;;;:::o;1272:417:25:-;1391:16;1456:54;1481:7;1490:6;1498:11;1456:24;:54::i;:::-;1445:65;;1558:71;1585:7;1594:6;1610:4;1617:11;1558:26;:71::i;:::-;1674:8;1667:15;;1272:417;;;;;;:::o;302::21:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;1618:640:20:-;1754:13;1741:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1784:13;1771:26;;;;;;;;:9;:26;;;;;;;;;1741:56;1737:154;;;1830:1;1821:5;:10;1813:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:154;1941:36;1969:7;1941:27;:36::i;:::-;1933:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:7;2007:11;:19;2019:6;2007:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2114:5;2086:11;:19;2098:6;2086:19;;;;;;;;;;;;;;;:25;;:33;;;;2161:9;2129:11;:19;2141:6;2129:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2208:43;2217:6;2225:7;2234:5;2241:9;2208:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:640;;;;:::o;418:97:18:-;487:21;499:8;487:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;487:21:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:97;:::o;9053:117:2:-;9110:13;9152:11;:9;:11::i;:::-;9142:21;;:6;:21;;;9135:28;;9053:117;;;:::o;3718:159:17:-;3804:15;3838:8;:26;3855:7;3847:16;;;;;;;;3838:26;;;;;;;;;;;:32;3865:4;3838:32;;;;;;;;;;;;;;;;3831:39;;3718:159;;;;:::o;1058:148:27:-;1121:13;1164:10;1153:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1189:10;1178:21;;;;;;;;:7;:21;;;;;;;;;1153:46;1146:53;;1058:148;;;:::o;2889:99:13:-;2939:13;535:42;2964:17;;2889:99;:::o;1501::14:-;1551:13;565:42;1576:17;;1501:99;:::o;2081:694:17:-;2192:18;2253:22;2278:8;:26;2295:7;2287:16;;;;;;;;2278:26;;;;;;;;;;;:32;2305:4;2278:32;;;;;;;;;;;;;;;;2253:57;;2386:14;2368;:32;;2360:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:34;2518:14;2499;:18;;:34;;;;:::i;:::-;2486:47;;2615:10;2580:8;:26;2597:7;2589:16;;;;;;;;2580:26;;;;;;;;;;;:32;2607:4;2580:32;;;;;;;;;;;;;;;:45;;;;2663:59;2680:7;2689:4;2695:14;2711:10;2663:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:10;2751:17;;;2081:694;;;;;:::o;1400:174:27:-;1496:24;1512:7;1496:15;:24::i;:::-;1489:41;;;1531:2;1535:5;1489:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1489:52:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1489:52:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1489:52:27;;;;;;;;;;;;;;;;1481:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:174;;;:::o;1542:176:9:-;1600:7;1619:9;1635:1;1631;:5;1619:17;;1659:1;1654;:6;;1646:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:1;1703:8;;;1542:176;;;;:::o;2632:315:27:-;2730:10;2719:21;;;;;;;;:7;:21;;;;;;;;;2715:226;;;2756:30;2774:4;2780:5;2756:17;:30::i;:::-;2715:226;;;2818:10;2807:21;;;;;;;;:7;:21;;;;;;;;;2803:138;;;2844:30;2862:4;2868:5;2844:17;:30::i;:::-;2803:138;;;2905:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:138;2715:226;2632:315;;;:::o;3841:453:25:-;3946:16;4000:18;4021:55;4046:7;4055:6;4063:12;4021:24;:55::i;:::-;4000:76;;4120:41;4139:7;4148:12;4120:18;:41::i;:::-;4199:42;4211:7;4220:6;4228:12;4199:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4277:10;4270:17;;;3841:453;;;;;:::o;1238:479:17:-;1346:18;1429:49;1466:11;1429:8;:26;1446:7;1438:16;;;;;;;;1429:26;;;;;;;;;;;:32;1456:4;1429:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1416:62;;1560:10;1525:8;:26;1542:7;1534:16;;;;;;;;1525:26;;;;;;;;;;;:32;1552:4;1525:32;;;;;;;;;;;;;;;:45;;;;1608:56;1625:7;1634:4;1640:11;1653:10;1608:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:10;1693:17;;1238:479;;;;;:::o;1815:202:27:-;1929:24;1945:7;1929:15;:24::i;:::-;1922:45;;;1968:4;1974:2;1978:5;1922:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1922:62:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1922:62:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1922:62:27;;;;;;;;;;;;;;;;1914:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:202;;;;:::o;1280:179:9:-;1338:7;1370:1;1365;:6;;1357:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:9;1432:1;1428;:5;1416:17;;1451:1;1444:8;;;1280:179;;;;:::o;1025:217:13:-;535:42;1134:30;;;1165:4;1179;1186:5;1134:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:58:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:58:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:58:13;;;;;;;;;;;;;;;;;1223:12;1229:5;1223;:12::i;:::-;1025:217;;:::o;1249:150:14:-;565:42;1324:31;;;1356:4;1362:5;1324:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1324:44:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1324:44:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1324:44:14;;;;;;;;;;;;;;;;1316:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:150;;:::o;2163:277:27:-;2243:10;2232:21;;;;;;;;:7;:21;;;;;;;;;2228:206;;;2269:20;2283:5;2269:13;:20::i;:::-;2228:206;;;2321:10;2310:21;;;;;;;;:7;:21;;;;;;;;;2306:128;;;2347:20;2361:5;2347:13;:20::i;:::-;2306:128;;;2398:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2306:128;2228:206;2163:277;;:::o;1455:653:13:-;535:42;1551:25;;;669:42;1591:5;1551:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:46:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1551:46:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1551:46:13;;;;;;;;;;;;;;;;;1636:19;1658:5;1636:27;;1674:25;1701:22;1727:34;1749:11;1727:21;:34::i;:::-;1673:88;;;;1771:16;1790:3;1771:22;;1803:21;669:42;1827:60;;;1901:11;1926:17;1957:14;1985:8;2007:25;:23;:25::i;:::-;1827:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1827:215:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1827:215:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1827:215:13;;;;;;;;;;;;;;;;1803:239;;2073:28;2087:13;2073;:28::i;:::-;1455:653;;;;;;:::o;891:111:14:-;565:42;948:20;;;969:5;948:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:27:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;948:27:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:27:14;;;;;;;;;;;;;;;;940:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:111;:::o;2424:363:13:-;2497:17;2516;669:42;2557:62;;;2620:9;2557:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2557:73:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2557:73:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2557:73:13;;;;;;;;;;;;;;;;2545:85;;2677:28;:26;:28::i;:::-;2652:78;;;2731:9;2652:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2652:89:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2652:89:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2652:89:13;;;;;;;;;;;;;;;;2640:101;;2759:9;2770;2751:29;;;;2424:363;;;:::o;1724:111:14:-;1777:16;699:42;1805:23;;1724:111;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../helpers/openzeppelin-solidity/math/SafeMath.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title SimpleGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/SimpleGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time.\n///             - The counterparty can increase, release, or punish the stake at any time.\n///             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract SimpleGriefing is Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // execute griefing\n        cost = Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    enum AgreementStatus { isInitialized, isStaked }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isStaked: stake is deposited\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        uint256 currentStake = getStake();\n        if (currentStake > 0) {\n            return AgreementStatus.isStaked;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isStaked state\n    /// @return validity bool true if correct state\n    function isStaked() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isStaked;\n    }\n}\n",
  "sourcePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/SimpleGriefing.sol",
  "ast": {
    "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/SimpleGriefing.sol",
    "exportedSymbols": {
      "SimpleGriefing": [1101]
    },
    "id": 1102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": ["solidity", "^", "0.5", ".13"],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/helpers/openzeppelin-solidity/math/SafeMath.sol",
        "file": "../helpers/openzeppelin-solidity/math/SafeMath.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 3112,
        "src": "26:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 644,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 5032,
        "src": "87:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 645,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 4355,
        "src": "121:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 646,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 5150,
        "src": "160:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 6388,
        "src": "194:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 648,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5031,
              "src": "1509:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5031",
                "typeString": "contract Griefing"
              }
            },
            "id": 649,
            "nodeType": "InheritanceSpecifier",
            "src": "1509:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 650,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4354,
              "src": "1519:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4354",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 651,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 652,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5149,
              "src": "1534:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5149",
                "typeString": "contract Operated"
              }
            },
            "id": 653,
            "nodeType": "InheritanceSpecifier",
            "src": "1534:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 654,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6387,
              "src": "1544:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6387",
                "typeString": "contract Template"
              }
            },
            "id": 655,
            "nodeType": "InheritanceSpecifier",
            "src": "1544:8:2"
          }
        ],
        "contractDependencies": [
          3825,
          3894,
          4337,
          4354,
          5031,
          5149,
          6324,
          6387,
          6701
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleGriefing\n @author Stephane Gosselin (@thegostep) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/SimpleGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time.\n             - The counterparty can increase, release, or punish the stake at any time.\n             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          6387,
          5149,
          4354,
          5031,
          6324,
          6701,
          3825,
          3894,
          4337
        ],
        "name": "SimpleGriefing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 658,
            "libraryName": {
              "contractScope": null,
              "id": 656,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3111,
              "src": "1566:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1560:27:2",
            "typeName": {
              "id": 657,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1579:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 660,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "1593:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$665_storage",
              "typeString": "struct SimpleGriefing.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 659,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 665,
              "src": "1593:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$665_storage_ptr",
                "typeString": "struct SimpleGriefing.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleGriefing.Data",
            "id": 665,
            "members": [
              {
                "constant": false,
                "id": 662,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 665,
                "src": "1639:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 661,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1639:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 664,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 665,
                "src": "1663:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 663,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1663:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "1617:73:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 681,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1723:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1749:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1773:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1803:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 672,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "1803:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 675,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1840:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1863:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 676,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "1863:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1901:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1713:208:2"
            },
            "src": "1696:226:2"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "3522:577:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 700,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "3562:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$665_storage",
                          "typeString": "struct SimpleGriefing.Data storage ref"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 662,
                      "src": "3562:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 703,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "3577:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3562:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "3593:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$665_storage",
                          "typeString": "struct SimpleGriefing.Data storage ref"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 664,
                      "src": "3593:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "3614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3593:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:33:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "3665:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3677:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3677:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3665:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 724,
                  "nodeType": "IfStatement",
                  "src": "3661:84:2",
                  "trueBody": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "3689:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 720,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "3725:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 717,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "3703:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5071,
                            "src": "3703:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3703:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 722,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:31:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "3804:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "3812:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "3821:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "3828:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 725,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "3785:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "3785:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3785:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "3785:53:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "3877:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3896:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3877:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 745,
                  "nodeType": "IfStatement",
                  "src": "3873:87:2",
                  "trueBody": {
                    "id": 744,
                    "nodeType": "Block",
                    "src": "3899:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 741,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "3940:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4354,
                              "src": "3913:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "3913:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3913:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 743,
                        "nodeType": "ExpressionStatement",
                        "src": "3913:36:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "4024:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "4034:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "4042:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 750,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "4056:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "4065:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4072:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "4083:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 746,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "4012:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,bytes memory)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "EmitStatement",
                  "src": "4007:85:2"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 698,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 697,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6349,
                  "src": "3501:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3501:20:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3288:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3314:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3338:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3368:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 688,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "3368:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3405:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 693,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3428:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 692,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "3428:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3466:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:215:2"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3522:0:2"
            },
            "scope": 1101,
            "src": "3259:840:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4354:175:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 765,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "4419:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4419:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "4399:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "4399:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4399:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4391:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "4391:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "4513:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 771,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "4486:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4353,
                      "src": "4486:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4486:36:2"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4324:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4323:23:2"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:0:2"
            },
            "scope": 1101,
            "src": "4303:226:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "4948:324:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5002:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5002:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 784,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "4993:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4993:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 790,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5037:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5037:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 788,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5017:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5017:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5017:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4993:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5050:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4985:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4985:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "4985:91:2"
                },
                {
                  "assignments": [798],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 815,
                      "src": "5125:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5125:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 799,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "5142:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "5142:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5125:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 807,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "5224:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 805,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5204:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5204:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5204:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "5233:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 810,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "5241:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5241:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "5253:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 802,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5186:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5186:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:79:2"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4920:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4919:21:2"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4948:0:2"
            },
            "scope": 1101,
            "src": "4897:375:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "5696:336:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 823,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5756:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5756:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 822,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "5741:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5741:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 828,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5791:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5791:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 826,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5771:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5771:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5741:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5804:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5733:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5733:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "5733:103:2"
                },
                {
                  "assignments": [836],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 853,
                      "src": "5885:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 839,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 837,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "5902:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "5902:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5885:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 845,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "5984:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 843,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5964:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5964:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5964:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 847,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "5993:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "6001:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6001:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 850,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "6013:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 840,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5946:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5946:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:79:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "5668:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5667:21:2"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5696:0:2"
            },
            "scope": 1101,
            "src": "5652:380:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "6932:255:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 865,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6992:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6992:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 864,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "6977:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6977:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 870,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7027:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7027:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7007:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7007:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6977:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7040:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6969:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6969:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "6969:103:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "7111:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "7134:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7134:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 882,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "7146:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$665_storage",
                              "typeString": "struct SimpleGriefing.Data storage ref"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 662,
                          "src": "7146:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 884,
                          "name": "punishment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "7160:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 858,
                          "src": "7172:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 878,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "7118:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_grief",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4904,
                        "src": "7118:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7118:62:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7111:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:69:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6860:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6880:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6859:42:2"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6918:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6917:14:2"
            },
            "scope": 1101,
            "src": "6844:343:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "7515:360:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7575:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7575:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 896,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "7560:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7560:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 902,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7610:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7610:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 900,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7590:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7590:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7590:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7560:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7623:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7552:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:103:2"
                },
                {
                  "assignments": [910],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 926,
                      "src": "7704:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7704:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 913,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 911,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "7721:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "7721:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7704:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 919,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "7827:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 917,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "7807:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "7807:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7807:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7836:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 922,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7844:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 923,
                        "name": "amountToRelease",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "7852:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 914,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "7788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6232,
                      "src": "7788:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:80:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "amountToRelease",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "7483:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7482:25:2"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7515:0:2"
            },
            "scope": 1101,
            "src": "7461:414:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "8133:177:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 935,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "8198:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8198:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 933,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "8178:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "8178:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8178:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8211:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8170:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8170:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "8170:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 944,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "8294:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 941,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "8267:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "8267:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8267:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "8267:36:2"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "8108:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8107:18:2"
            },
            "returnParameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8133:0:2"
            },
            "scope": 1101,
            "src": "8082:228:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "8484:169:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "8549:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8549:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 952,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "8529:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "8529:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8529:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8562:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8521:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8521:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "8521:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "8618:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5128,
                      "src": "8618:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8618:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "8618:28:2"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8474:2:2"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8484:0:2"
            },
            "scope": 1101,
            "src": "8449:204:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "8840:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 971,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "8857:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "8857:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 970,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "8850:19:2"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8800:2:2"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "8824:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8824:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8823:16:2"
            },
            "scope": 1101,
            "src": "8782:94:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "9125:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 982,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "9142:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 983,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "9152:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9152:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9142:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 981,
                  "id": 986,
                  "nodeType": "Return",
                  "src": "9135:28:2"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "9071:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9070:16:2"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "9110:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9110:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9109:15:2"
            },
            "scope": 1101,
            "src": "9053:117:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "9368:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 993,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "9385:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 664,
                    "src": "9385:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 992,
                  "id": 995,
                  "nodeType": "Return",
                  "src": "9378:25:2"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9322:2:2"
            },
            "returnParameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "9346:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9346:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9345:22:2"
            },
            "scope": 1101,
            "src": "9298:112:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "9671:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1004,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "9688:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1005,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "9698:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9698:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9688:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1003,
                  "id": 1008,
                  "nodeType": "Return",
                  "src": "9681:34:2"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "9617:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9617:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9616:16:2"
            },
            "returnParameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "9656:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9656:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9655:15:2"
            },
            "scope": 1101,
            "src": "9593:129:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "9997:125:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1017,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "10007:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1020,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "10037:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$665_storage",
                              "typeString": "struct SimpleGriefing.Data storage ref"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 662,
                          "src": "10037:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1018,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "10017:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4938,
                        "src": "10017:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10017:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "10007:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "10007:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1025,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "10068:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1028,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "10106:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6701,
                            "src": "10077:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6701_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6429,
                          "src": "10077:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6396_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10077:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1030,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10067:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6396_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "10060:55:2"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9929:2:2"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "9953:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1012,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "9953:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1015,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "9982:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9982:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9952:44:2"
            },
            "scope": 1101,
            "src": "9912:210:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "10308:91:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1042,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "10364:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$665_storage",
                                "typeString": "struct SimpleGriefing.Data storage ref"
                              }
                            },
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 662,
                            "src": "10364:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1040,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "10344:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "10344:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10344:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1045,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "10379:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$665_storage",
                            "typeString": "struct SimpleGriefing.Data storage ref"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 662,
                        "src": "10379:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1038,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4337,
                        "src": "10325:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4337_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4336,
                      "src": "10325:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6396_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10325:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1037,
                  "id": 1048,
                  "nodeType": "Return",
                  "src": "10318:74:2"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 1050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10269:2:2"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "10293:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10292:15:2"
            },
            "scope": 1101,
            "src": "10252:147:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleGriefing.AgreementStatus",
            "id": 1053,
            "members": [
              {
                "id": 1051,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "10428:13:2"
              },
              {
                "id": 1052,
                "name": "isStaked",
                "nodeType": "EnumValue",
                "src": "10443:8:2"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "10405:48:2"
          },
          {
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "10766:204:2",
              "statements": [
                {
                  "assignments": [1059],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "10776:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10776:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1062,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1060,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "10799:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10799:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10776:33:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1063,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "10823:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10838:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10823:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "10903:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1070,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "10924:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                              "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10924:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                            "typeString": "enum SimpleGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1057,
                        "id": 1072,
                        "nodeType": "Return",
                        "src": "10917:36:2"
                      }
                    ]
                  },
                  "id": 1074,
                  "nodeType": "IfStatement",
                  "src": "10819:145:2",
                  "trueBody": {
                    "id": 1069,
                    "nodeType": "Block",
                    "src": "10841:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1066,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "10862:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                              "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10862:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                            "typeString": "enum SimpleGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1057,
                        "id": 1068,
                        "nodeType": "Return",
                        "src": "10855:31:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isStaked: stake is deposited",
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10718:2:2"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "10742:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                    "typeString": "enum SimpleGriefing.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1055,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1053,
                    "src": "10742:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10741:24:2"
            },
            "scope": 1101,
            "src": "10691:279:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "11183:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1081,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "11200:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "function () view returns (enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11200:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "11224:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11224:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "src": "11200:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1080,
                  "id": 1086,
                  "nodeType": "Return",
                  "src": "11193:60:2"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11142:2:2"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "11168:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11168:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11167:15:2"
            },
            "scope": 1101,
            "src": "11120:140:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "11463:72:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1093,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "11480:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "function () view returns (enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11480:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "11504:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11504:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "src": "11480:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1092,
                  "id": 1098,
                  "nodeType": "Return",
                  "src": "11473:55:2"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isStaked state\n @return validity bool true if correct state",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11422:2:2"
            },
            "returnParameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "11448:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11448:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11447:15:2"
            },
            "scope": 1101,
            "src": "11405:130:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1102,
        "src": "1482:10055:2"
      }
    ],
    "src": "0:11538:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/agreements/SimpleGriefing.sol",
    "exportedSymbols": {
      "SimpleGriefing": [1101]
    },
    "id": 1102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 642,
        "literals": ["solidity", "^", "0.5", ".13"],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/helpers/openzeppelin-solidity/math/SafeMath.sol",
        "file": "../helpers/openzeppelin-solidity/math/SafeMath.sol",
        "id": 643,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 3112,
        "src": "26:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Griefing.sol",
        "file": "../modules/Griefing.sol",
        "id": 644,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 5032,
        "src": "87:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/EventMetadata.sol",
        "file": "../modules/EventMetadata.sol",
        "id": 645,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 4355,
        "src": "121:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Operated.sol",
        "file": "../modules/Operated.sol",
        "id": 646,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 5150,
        "src": "160:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thegostep/github/erasure-protocol/contracts/modules/Template.sol",
        "file": "../modules/Template.sol",
        "id": 647,
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 6388,
        "src": "194:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 648,
              "name": "Griefing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5031,
              "src": "1509:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Griefing_$5031",
                "typeString": "contract Griefing"
              }
            },
            "id": 649,
            "nodeType": "InheritanceSpecifier",
            "src": "1509:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 650,
              "name": "EventMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4354,
              "src": "1519:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EventMetadata_$4354",
                "typeString": "contract EventMetadata"
              }
            },
            "id": 651,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 652,
              "name": "Operated",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5149,
              "src": "1534:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Operated_$5149",
                "typeString": "contract Operated"
              }
            },
            "id": 653,
            "nodeType": "InheritanceSpecifier",
            "src": "1534:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 654,
              "name": "Template",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6387,
              "src": "1544:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Template_$6387",
                "typeString": "contract Template"
              }
            },
            "id": 655,
            "nodeType": "InheritanceSpecifier",
            "src": "1544:8:2"
          }
        ],
        "contractDependencies": [
          3825,
          3894,
          4337,
          4354,
          5031,
          5149,
          6324,
          6387,
          6701
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleGriefing\n @author Stephane Gosselin (@thegostep) for Numerai Inc\n @dev Security contact: security@numer.ai\n @dev Version: 1.3.0\n @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.3.0/docs/state-machines/agreements/SimpleGriefing.png\n @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n         Notable features:\n             - The staker can increase the stake at any time.\n             - The counterparty can increase, release, or punish the stake at any time.\n             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          6387,
          5149,
          4354,
          5031,
          6324,
          6701,
          3825,
          3894,
          4337
        ],
        "name": "SimpleGriefing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 658,
            "libraryName": {
              "contractScope": null,
              "id": 656,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3111,
              "src": "1566:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1560:27:2",
            "typeName": {
              "id": 657,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1579:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 660,
            "name": "_data",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "1593:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Data_$665_storage",
              "typeString": "struct SimpleGriefing.Data"
            },
            "typeName": {
              "contractScope": null,
              "id": 659,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 665,
              "src": "1593:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Data_$665_storage_ptr",
                "typeString": "struct SimpleGriefing.Data"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SimpleGriefing.Data",
            "id": 665,
            "members": [
              {
                "constant": false,
                "id": 662,
                "name": "staker",
                "nodeType": "VariableDeclaration",
                "scope": 665,
                "src": "1639:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 661,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1639:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 664,
                "name": "counterparty",
                "nodeType": "VariableDeclaration",
                "scope": 665,
                "src": "1663:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 663,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1663:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Data",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "1617:73:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 681,
            "name": "Initialized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "indexed": false,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1723:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "indexed": false,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1749:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "indexed": false,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1773:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "indexed": false,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1803:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 672,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "1803:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 675,
                  "indexed": false,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1840:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "indexed": false,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1863:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 676,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "1863:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "indexed": false,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "1901:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1901:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1713:208:2"
            },
            "src": "1696:226:2"
          },
          {
            "body": {
              "id": 756,
              "nodeType": "Block",
              "src": "3522:577:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 700,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "3562:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$665_storage",
                          "typeString": "struct SimpleGriefing.Data storage ref"
                        }
                      },
                      "id": 702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 662,
                      "src": "3562:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 703,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 685,
                      "src": "3577:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3562:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "3593:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Data_$665_storage",
                          "typeString": "struct SimpleGriefing.Data storage ref"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "counterparty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 664,
                      "src": "3593:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "counterparty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "3614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3593:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:33:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 712,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "3665:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3677:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3677:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3665:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 724,
                  "nodeType": "IfStatement",
                  "src": "3661:84:2",
                  "trueBody": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "3689:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 720,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "3725:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 717,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "3703:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5071,
                            "src": "3703:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3703:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 722,
                        "nodeType": "ExpressionStatement",
                        "src": "3703:31:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 728,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "3804:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 729,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "3812:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "3821:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "3828:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 725,
                        "name": "Griefing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5031,
                        "src": "3785:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                          "typeString": "type(contract Griefing)"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4825,
                      "src": "3785:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$returns$__$",
                        "typeString": "function (address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType)"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3785:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "3785:53:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "3877:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3877:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3896:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3877:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 745,
                  "nodeType": "IfStatement",
                  "src": "3873:87:2",
                  "trueBody": {
                    "id": 744,
                    "nodeType": "Block",
                    "src": "3899:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 741,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "3940:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "EventMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4354,
                              "src": "3913:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                                "typeString": "type(contract EventMetadata)"
                              }
                            },
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "3913:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3913:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 743,
                        "nodeType": "ExpressionStatement",
                        "src": "3913:36:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "4024:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "4034:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "counterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "4042:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 750,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "4056:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "4065:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "ratioType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4072:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "4083:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_RatioType_$4717",
                          "typeString": "enum Griefing.RatioType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 746,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "4012:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_enum$_Tokens_$6396_$_t_uint256_$_t_enum$_RatioType_$4717_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,enum TokenManager.Tokens,uint256,enum Griefing.RatioType,bytes memory)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "EmitStatement",
                  "src": "4007:85:2"
                }
              ]
            },
            "documentation": "@notice Constructor used to initialize the agreement parameters.\n         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n @dev Access Control: only factory\n      State Machine: before all\n @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.",
            "id": 757,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 698,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 697,
                  "name": "initializeTemplate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6349,
                  "src": "3501:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3501:20:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3288:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3314:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3338:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3368:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 688,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "3368:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "name": "ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3405:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 693,
                  "name": "ratioType",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3428:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_RatioType_$4717",
                    "typeString": "enum Griefing.RatioType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 692,
                    "name": "Griefing.RatioType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4717,
                    "src": "3428:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RatioType_$4717",
                      "typeString": "enum Griefing.RatioType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 757,
                  "src": "3466:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:215:2"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3522:0:2"
            },
            "scope": 1101,
            "src": "3259:840:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4354:175:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 765,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "4419:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4419:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "4399:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "4399:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4399:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4391:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "4391:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "4513:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 771,
                        "name": "EventMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "4486:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EventMetadata_$4354_$",
                          "typeString": "type(contract EventMetadata)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4353,
                      "src": "4486:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4486:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4486:36:2"
                }
              ]
            },
            "documentation": "@notice Emit metadata event\n @dev Access Control: operator\n      State Machine: always\n @param metadata bytes data (any format) to emit as event",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "4324:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4323:23:2"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:0:2"
            },
            "scope": 1101,
            "src": "4303:226:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "4948:324:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 785,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5002:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5002:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 784,
                            "name": "isStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "4993:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4993:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 790,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5037:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5037:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 788,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5017:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5017:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5017:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4993:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79207374616b6572206f72206f70657261746f72",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5050:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        },
                        "value": "only staker or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c598b3c90feb941f0395205459fac035e829819b0b00646b1ce1188e2d1ad7a",
                          "typeString": "literal_string \"only staker or operator\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "4985:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4985:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "4985:91:2"
                },
                {
                  "assignments": [798],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 798,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 815,
                      "src": "5125:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5125:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 799,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "5142:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "5142:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5125:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 807,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "5224:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 805,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5204:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5204:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5204:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "5233:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 810,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "5241:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5241:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "5253:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 802,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5186:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5186:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:79:2"
                }
              ]
            },
            "documentation": "@notice Called by the staker to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: staker OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4920:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4920:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4919:21:2"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4948:0:2"
            },
            "scope": 1101,
            "src": "4897:375:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "5696:336:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 823,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5756:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5756:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 822,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "5741:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5741:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 828,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "5791:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5791:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 826,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "5771:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "5771:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5741:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5804:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "5733:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5733:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "ExpressionStatement",
                  "src": "5733:103:2"
                },
                {
                  "assignments": [836],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 836,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 853,
                      "src": "5885:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 835,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 839,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 837,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "5902:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "5902:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5885:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 845,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "5984:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 843,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "5964:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "5964:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5964:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 847,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "5993:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8449,
                          "src": "6001:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6001:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 850,
                        "name": "amountToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "6013:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 840,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "5946:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6199,
                      "src": "5946:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "5946:79:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to increase the stake\n          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "amountToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "5668:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5667:21:2"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5696:0:2"
            },
            "scope": 1101,
            "src": "5652:380:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "6932:255:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 865,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "6992:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6992:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 864,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "6977:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6977:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 870,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7027:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7027:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7007:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7007:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6977:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7040:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "6969:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6969:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "6969:103:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "cost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "7111:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 880,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8449,
                            "src": "7134:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7134:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 882,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "7146:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$665_storage",
                              "typeString": "struct SimpleGriefing.Data storage ref"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 662,
                          "src": "7146:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 884,
                          "name": "punishment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "7160:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 858,
                          "src": "7172:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 878,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "7118:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_grief",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4904,
                        "src": "7118:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256,bytes memory) returns (uint256)"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7118:62:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7111:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:69:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to punish the stake\n          - burns the punishment from the stake and a proportional amount from the counterparty balance\n          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n @param message bytes data (any format) to emit as event giving reason for the punishment\n @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment",
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "punish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "name": "punishment",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6860:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6880:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6859:42:2"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "name": "cost",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "6918:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6918:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6917:14:2"
            },
            "scope": 1101,
            "src": "6844:343:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "7515:360:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7575:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7575:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 896,
                            "name": "isCounterparty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "7560:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7560:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 902,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8449,
                                "src": "7610:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7610:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 900,
                              "name": "Operated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5149,
                              "src": "7590:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                                "typeString": "type(contract Operated)"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5148,
                            "src": "7590:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7590:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7560:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f756e7465727061727479206f72206f70657261746f72",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7623:31:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        },
                        "value": "only counterparty or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9f61d0462b270d2b08cc80c2ff9a932f6aab2c50227cf490d14b91f8d03f0e8",
                          "typeString": "literal_string \"only counterparty or operator\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "7552:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:103:2"
                },
                {
                  "assignments": [910],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "name": "staker",
                      "nodeType": "VariableDeclaration",
                      "scope": 926,
                      "src": "7704:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 909,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7704:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 913,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 911,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "7721:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "7721:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7704:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 919,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "7827:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 917,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "7807:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "7807:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7807:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7836:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 922,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7844:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 923,
                        "name": "amountToRelease",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "7852:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 914,
                        "name": "Staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "7788:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Staking_$6324_$",
                          "typeString": "type(contract Staking)"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_takeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6232,
                      "src": "7788:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Tokens_$6396_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:80:2"
                }
              ]
            },
            "documentation": "@notice Called by the counterparty to release the stake to the staker\n @dev Access Control: counterparty OR operator\n      State Machine: anytime\n @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "amountToRelease",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "7483:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7482:25:2"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7515:0:2"
            },
            "scope": 1101,
            "src": "7461:414:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "8133:177:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 935,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "8198:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8198:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 933,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "8178:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "8178:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8178:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8211:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8170:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8170:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "8170:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 944,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "8294:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 941,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "8267:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5103,
                      "src": "8267:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8267:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "8267:36:2"
                }
              ]
            },
            "documentation": "@notice Called by the operator to transfer control to new operator\n @dev Access Control: operator\n      State Machine: anytime\n @param operator address of the new operator",
            "id": 948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "8108:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8107:18:2"
            },
            "returnParameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8133:0:2"
            },
            "scope": 1101,
            "src": "8082:228:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "8484:169:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8449,
                              "src": "8549:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8549:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 952,
                            "name": "Operated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5149,
                            "src": "8529:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                              "typeString": "type(contract Operated)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOperator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5148,
                          "src": "8529:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8529:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8562:15:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [8452, 8453],
                      "referencedDeclaration": 8453,
                      "src": "8521:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8521:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "8521:57:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "Operated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5149,
                        "src": "8618:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Operated_$5149_$",
                          "typeString": "type(contract Operated)"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_renounceOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5128,
                      "src": "8618:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8618:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "8618:28:2"
                }
              ]
            },
            "documentation": "@notice Called by the operator to renounce control\n @dev Access Control: operator\n      State Machine: anytime",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOperator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8474:2:2"
            },
            "returnParameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8484:0:2"
            },
            "scope": 1101,
            "src": "8449:204:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "8840:36:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 971,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "8857:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "staker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 662,
                    "src": "8857:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 970,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "8850:19:2"
                }
              ]
            },
            "documentation": "@notice Get the address of the staker (if set)\n @return staker address of the staker",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8800:2:2"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "8824:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8824:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8823:16:2"
            },
            "scope": 1101,
            "src": "8782:94:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "9125:45:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 982,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "9142:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 983,
                        "name": "getStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "9152:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9152:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9142:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 981,
                  "id": 986,
                  "nodeType": "Return",
                  "src": "9135:28:2"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored staker address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "9071:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9071:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9070:16:2"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "9110:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9110:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9109:15:2"
            },
            "scope": 1101,
            "src": "9053:117:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "9368:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 993,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "9385:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Data_$665_storage",
                        "typeString": "struct SimpleGriefing.Data storage ref"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "counterparty",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 664,
                    "src": "9385:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 992,
                  "id": 995,
                  "nodeType": "Return",
                  "src": "9378:25:2"
                }
              ]
            },
            "documentation": "@notice Get the address of the counterparty (if set)\n @return counterparty address of counterparty account",
            "id": 997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9322:2:2"
            },
            "returnParameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "name": "counterparty",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "9346:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9346:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9345:22:2"
            },
            "scope": 1101,
            "src": "9298:112:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "9671:51:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1004,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "9688:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1005,
                        "name": "getCounterparty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "9698:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9698:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9688:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1003,
                  "id": 1008,
                  "nodeType": "Return",
                  "src": "9681:34:2"
                }
              ]
            },
            "documentation": "@notice Validate if the address matches the stored counterparty address\n @param caller address to validate\n @return validity bool true if matching address",
            "id": 1010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCounterparty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "9617:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9617:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9616:16:2"
            },
            "returnParameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1002,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "9656:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9656:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9655:15:2"
            },
            "scope": 1101,
            "src": "9593:129:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "9997:125:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1017,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "10007:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1020,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "10037:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Data_$665_storage",
                              "typeString": "struct SimpleGriefing.Data storage ref"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "staker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 662,
                          "src": "10037:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1018,
                          "name": "Griefing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5031,
                          "src": "10017:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                            "typeString": "type(contract Griefing)"
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4938,
                        "src": "10017:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                          "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10017:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Tokens_$6396",
                        "typeString": "enum TokenManager.Tokens"
                      }
                    },
                    "src": "10007:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "10007:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1025,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "10068:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1028,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "10106:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Tokens_$6396",
                              "typeString": "enum TokenManager.Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "TokenManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6701,
                            "src": "10077:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TokenManager_$6701_$",
                              "typeString": "type(contract TokenManager)"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6429,
                          "src": "10077:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_Tokens_$6396_$returns$_t_address_$",
                            "typeString": "function (enum TokenManager.Tokens) pure returns (address)"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10077:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1030,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10067:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_Tokens_$6396_$_t_address_$",
                      "typeString": "tuple(enum TokenManager.Tokens,address)"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "10060:55:2"
                }
              ]
            },
            "documentation": "@notice Get the token ID and address used by the agreement\n @return tokenID TokenManager.Tokens ID of the ERC20 token.\n @return token address of the ERC20 token.",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9929:2:2"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "9953:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Tokens_$6396",
                    "typeString": "enum TokenManager.Tokens"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1012,
                    "name": "TokenManager.Tokens",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6396,
                    "src": "9953:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Tokens_$6396",
                      "typeString": "enum TokenManager.Tokens"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1015,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "9982:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9982:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9952:44:2"
            },
            "scope": 1101,
            "src": "9912:210:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "10308:91:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1042,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "10364:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$665_storage",
                                "typeString": "struct SimpleGriefing.Data storage ref"
                              }
                            },
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 662,
                            "src": "10364:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1040,
                            "name": "Griefing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5031,
                            "src": "10344:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Griefing_$5031_$",
                              "typeString": "type(contract Griefing)"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getTokenID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4938,
                          "src": "10344:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Tokens_$6396_$",
                            "typeString": "function (address) view returns (enum TokenManager.Tokens)"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10344:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1045,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "10379:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Data_$665_storage",
                            "typeString": "struct SimpleGriefing.Data storage ref"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "staker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 662,
                        "src": "10379:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Tokens_$6396",
                          "typeString": "enum TokenManager.Tokens"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1038,
                        "name": "Deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4337,
                        "src": "10325:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Deposit_$4337_$",
                          "typeString": "type(contract Deposit)"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4336,
                      "src": "10325:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_Tokens_$6396_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (enum TokenManager.Tokens,address) view returns (uint256)"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10325:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1037,
                  "id": 1048,
                  "nodeType": "Return",
                  "src": "10318:74:2"
                }
              ]
            },
            "documentation": "@notice Get the current stake of the agreement\n @return stake uint256 amount of tokens (18 decimals) staked.",
            "id": 1050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10269:2:2"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "name": "stake",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "10293:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10292:15:2"
            },
            "scope": 1101,
            "src": "10252:147:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleGriefing.AgreementStatus",
            "id": 1053,
            "members": [
              {
                "id": 1051,
                "name": "isInitialized",
                "nodeType": "EnumValue",
                "src": "10428:13:2"
              },
              {
                "id": 1052,
                "name": "isStaked",
                "nodeType": "EnumValue",
                "src": "10443:8:2"
              }
            ],
            "name": "AgreementStatus",
            "nodeType": "EnumDefinition",
            "src": "10405:48:2"
          },
          {
            "body": {
              "id": 1075,
              "nodeType": "Block",
              "src": "10766:204:2",
              "statements": [
                {
                  "assignments": [1059],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "name": "currentStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "10776:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10776:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1062,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1060,
                      "name": "getStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "10799:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10799:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10776:33:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1063,
                      "name": "currentStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "10823:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10838:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10823:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "10903:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1070,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "10924:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                              "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10924:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                            "typeString": "enum SimpleGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1057,
                        "id": 1072,
                        "nodeType": "Return",
                        "src": "10917:36:2"
                      }
                    ]
                  },
                  "id": 1074,
                  "nodeType": "IfStatement",
                  "src": "10819:145:2",
                  "trueBody": {
                    "id": 1069,
                    "nodeType": "Block",
                    "src": "10841:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1066,
                            "name": "AgreementStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "10862:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                              "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isStaked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10862:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                            "typeString": "enum SimpleGriefing.AgreementStatus"
                          }
                        },
                        "functionReturnParameters": 1057,
                        "id": 1068,
                        "nodeType": "Return",
                        "src": "10855:31:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Get the status of the state machine\n @return status AgreementStatus from the following states:\n          - isInitialized: initialized but no deposits made\n          - isStaked: stake is deposited",
            "id": 1076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10718:2:2"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "10742:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                    "typeString": "enum SimpleGriefing.AgreementStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1055,
                    "name": "AgreementStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1053,
                    "src": "10742:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10741:24:2"
            },
            "scope": 1101,
            "src": "10691:279:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1087,
              "nodeType": "Block",
              "src": "11183:77:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1081,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "11200:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "function () view returns (enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11200:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1083,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "11224:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11224:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "src": "11200:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1080,
                  "id": 1086,
                  "nodeType": "Return",
                  "src": "11193:60:2"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isInitialized state\n @return validity bool true if correct state",
            "id": 1088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11142:2:2"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "11168:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11168:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11167:15:2"
            },
            "scope": 1101,
            "src": "11120:140:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "11463:72:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                      "typeString": "enum SimpleGriefing.AgreementStatus"
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1093,
                        "name": "getAgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "11480:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "function () view returns (enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11480:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "11504:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$1053_$",
                          "typeString": "type(enum SimpleGriefing.AgreementStatus)"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11504:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$1053",
                        "typeString": "enum SimpleGriefing.AgreementStatus"
                      }
                    },
                    "src": "11480:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1092,
                  "id": 1098,
                  "nodeType": "Return",
                  "src": "11473:55:2"
                }
              ]
            },
            "documentation": "@notice Validate if the state machine is in the AgreementStatus.isStaked state\n @return validity bool true if correct state",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11422:2:2"
            },
            "returnParameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "name": "validity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "11448:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11448:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11447:15:2"
            },
            "scope": 1101,
            "src": "11405:130:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1102,
        "src": "1482:10055:2"
      }
    ],
    "src": "0:11538:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  },
  "networks": {},
  "schemaVersion": "2.2.4",
  "updatedAt": "2020-01-08T17:56:10.805Z"
}
